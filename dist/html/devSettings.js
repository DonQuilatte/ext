function createDevModeSettingsHTML(){return'\n    <div class="dev-mode-settings" style="\n      border: 2px dashed #ff9800; \n      padding: 15px; \n      margin: 10px 0; \n      border-radius: 8px; \n      background: rgba(255, 152, 0, 0.1);\n    ">\n      <h3 style="margin: 0 0 10px 0; color: #ff9800; font-size: 16px;">\n        🧪 Development Mode\n      </h3>\n      <p style="margin: 0 0 15px 0; font-size: 14px; color: #666;">\n        Enable Premium features for development and testing purposes.\n      </p>\n      \n      <div style="display: flex; align-items: center; gap: 10px; margin-bottom: 10px;">\n        <label style="font-weight: bold;">Premium Features:</label>\n        <label class="switch">\n          <input type="checkbox" id="devModePremiumToggle">\n          <span class="slider round"></span>\n        </label>\n        <span id="devModeStatus" style="font-size: 12px; color: #666;"></span>\n      </div>\n      \n      <div style="font-size: 12px; color: #888; line-height: 1.4;">\n        <strong>Keyboard Shortcut:</strong> Ctrl+Shift+D<br>\n        <strong>Console Commands:</strong> devMode.enable(), devMode.disable(), devMode.status()\n      </div>\n    </div>\n  '}function injectDevModeSettings(){const e=document.querySelector('[data-modal-type="SETTINGS"]');if(!e)return;const t=e.querySelector(".modal-content");if(!t)return;if(e.querySelector(".dev-mode-settings"))return;const o=document.createElement("div");o.innerHTML=createDevModeSettingsHTML(),t.insertBefore(o,t.firstChild),updateDevModeToggle();const n=e.querySelector("#devModePremiumToggle");n&&n.addEventListener("change",handleDevModeToggle)}async function updateDevModeToggle(){try{const e=!0===(await chrome.storage.local.get("DEV_MODE_PREMIUM")).DEV_MODE_PREMIUM,t=document.querySelector("#devModePremiumToggle"),o=document.querySelector("#devModeStatus");t&&(t.checked=e),o&&(o.textContent=e?"✅ ENABLED":"❌ DISABLED",o.style.color=e?"#4CAF50":"#f44336")}catch(e){console.error("Error updating dev mode toggle:",e)}}async function handleDevModeToggle(e){const t=e.target.checked;try{if(t){await chrome.storage.local.set({DEV_MODE_PREMIUM:!0});const e=await chrome.storage.local.get("store");e.store&&(e.store["-r.6es£Jr1U0"]=!0,await chrome.storage.local.set({store:e.store})),console.log("🚀 DEV MODE: Premium features ENABLED via settings")}else{await chrome.storage.local.set({DEV_MODE_PREMIUM:!1});const e=await chrome.storage.local.get("store");e.store&&(e.store["-r.6es£Jr1U0"]=!1,await chrome.storage.local.set({store:e.store})),console.log("🔒 DEV MODE: Premium features DISABLED via settings")}updateDevModeToggle(),showDevModeNotification(t?"Premium features enabled":"Premium features disabled",t?"success":"info")}catch(o){console.error("Error toggling dev mode:",o),e.target.checked=!t}}function showDevModeNotification(e,t="info"){const o=document.createElement("div");o.style.cssText=`\n    position: fixed;\n    top: 20px;\n    right: 20px;\n    padding: 12px 20px;\n    background: ${"success"===t?"#4CAF50":"#2196F3"};\n    color: white;\n    border-radius: 4px;\n    font-family: Arial, sans-serif;\n    font-size: 14px;\n    font-weight: bold;\n    z-index: 10000;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.3);\n    transition: opacity 0.3s ease;\n  `,o.textContent=`🧪 DEV: ${e}`,document.body.appendChild(o),setTimeout(()=>{o.style.opacity="0",setTimeout(()=>{o.parentNode&&o.parentNode.removeChild(o)},300)},2e3)}function initializeDevSettings(){new MutationObserver(e=>{e.forEach(e=>{e.addedNodes.forEach(e=>{e.nodeType===Node.ELEMENT_NODE&&(e.querySelector?.('[data-modal-type="SETTINGS"]')||"SETTINGS"===e.dataset?.modalType&&e)&&setTimeout(()=>{injectDevModeSettings()},100)})})}).observe(document.body,{childList:!0,subtree:!0}),setTimeout(()=>{injectDevModeSettings()},1e3)}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",initializeDevSettings):initializeDevSettings(),"undefined"!=typeof window&&(window.devModeSettings={inject:injectDevModeSettings,update:updateDevModeToggle});