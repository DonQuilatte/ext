!function(){"use strict";console.log("🎯 Plan Text Override Script loaded");const e={"Toolbox Plan - Free":"ChatGPT Connection: Connected","Toolbox Plan - Premium":"ChatGPT Connection: Connected","Toolbox Plan":"ChatGPT Connection: Connected","Free Plan":"ChatGPT Connection: Connected","Premium Plan":"ChatGPT Connection: Connected",Free:"Connected",Premium:"Connected","toolbox-plan-free":"chatgpt-connection-connected","toolbox-plan-premium":"chatgpt-connection-connected","plan-free":"connection-connected","plan-premium":"connection-connected"};function t(n){if(n.nodeType===Node.TEXT_NODE){let t=n.textContent,o=!1;for(const[n,c]of Object.entries(e))t.includes(n)&&(t=t.replace(new RegExp(n,"gi"),c),o=!0);o&&(n.textContent=t,console.log("🔄 Replaced plan text:",n.textContent))}else if(n.nodeType===Node.ELEMENT_NODE){["class","id","data-plan","aria-label","title"].forEach(t=>{const o=n.getAttribute(t);if(o){let c=o,l=!1;for(const[t,n]of Object.entries(e))c.includes(t)&&(c=c.replace(new RegExp(t,"gi"),n),l=!0);l&&(n.setAttribute(t,c),console.log(`🔄 Replaced ${t} attribute:`,c))}});for(let e of n.childNodes)t(e)}}function n(){console.log("🔍 Scanning for plan text to replace..."),document.body&&t(document.body),['[class*="plan"]','[class*="subscription"]','[class*="premium"]','[class*="free"]',"[data-plan]",'[aria-label*="plan"]','[title*="plan"]'].forEach(e=>{try{document.querySelectorAll(e).forEach(e=>{t(e)})}catch(e){}})}const o=new MutationObserver(function(e){let t=!1;e.forEach(function(e){"childList"===e.type?e.addedNodes.forEach(function(e){e.nodeType!==Node.ELEMENT_NODE&&e.nodeType!==Node.TEXT_NODE||(t=!0)}):"characterData"===e.type&&(t=!0)}),t&&setTimeout(n,100)});!function e(){if(document.body)try{o.observe(document.body,{childList:!0,subtree:!0,characterData:!0,attributes:!0,attributeFilter:["class","id","data-plan","aria-label","title"]}),console.log("✅ MutationObserver started")}catch(e){console.warn("⚠️ Failed to start MutationObserver:",e)}else setTimeout(e,100)}(),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",n):n(),setInterval(n,2e3);const c=Element.prototype.innerHTML;Object.defineProperty(Element.prototype,"innerHTML",{get:function(){return c.call(this)},set:function(e){c.call(this,e),setTimeout(()=>t(this),50)}});const l=Node.prototype.textContent;Object.defineProperty(Node.prototype,"textContent",{get:function(){return l.call(this)},set:function(t){let n=t;for(const[t,o]of Object.entries(e))n&&n.includes&&n.includes(t)&&(n=n.replace(new RegExp(t,"gi"),o),console.log("🔄 Intercepted textContent set:",n));l.call(this,n)}}),console.log("✅ Plan Text Override Script initialized"),window.forcePlanTextReplace=n}();