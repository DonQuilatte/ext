!function(){"use strict";console.log("üîç Plan Debug Script loaded");const e={logLevel:"verbose",monitorInterval:3e3,searchDepth:10},o=["DEV_MODE_PREMIUM","MOCK_PREMIUM","isPremiumUser","userPlan","subscriptionStatus","planType","isResetChatHistory","local_user_data","store"],t=["premium","subscription","plan","-r.6es¬£Jr1U0"],n=[/toolbox.*plan.*free/i,/free.*plan/i,/premium.*plan/i,/subscription.*free/i,/subscription.*premium/i,/plan.*status/i];async function l(){return new Promise(e=>{try{"undefined"!=typeof chrome&&chrome.storage&&chrome.runtime&&!chrome.runtime.lastError?chrome.storage.local.get(null,o=>{if(chrome.runtime.lastError)return console.log("[Plan Debug] Chrome storage local error, using fallback"),void e(s());try{chrome.storage.sync.get(null,t=>{chrome.runtime.lastError?(console.log("[Plan Debug] Chrome storage sync error, using local only"),e({local:o||{},sync:{}})):e({local:o||{},sync:t||{}})})}catch(t){console.log("[Plan Debug] Sync storage access failed, using local only"),e({local:o||{},sync:{}})}}):e(s())}catch(o){console.log("[Plan Debug] Storage access failed, using fallback:",o.message),e(s())}})}function s(){try{const e={};for(let o=0;o<localStorage.length;o++){const t=localStorage.key(o);e[t]=localStorage.getItem(t)}return{local:e,sync:{}}}catch(e){return console.log("[Plan Debug] localStorage fallback failed:",e.message),{local:{},sync:{}}}}function a(){const e=[],o=document.createTreeWalker(document.body,NodeFilter.SHOW_TEXT,null,!1);let t;for(;t=o.nextNode();){const o=t.textContent.trim();if(o)for(const l of n)l.test(o)&&e.push({node:t,text:o,parent:t.parentElement,pattern:l.toString()})}return e}function r(){const e={};return Object.keys(window).forEach(o=>{if(/plan|premium|subscription|free/i.test(o))try{e[o]=window[o]}catch(t){e[o]="[Error accessing]"}}),e}async function c(){console.log("üîç === PLAN DEBUG REPORT ==="),console.log("üì¶ Storage Analysis:");const n=await l();console.log("Local Storage:"),o.forEach(e=>{n.local.hasOwnProperty(e)?console.log(`  ‚úÖ ${e}:`,n.local[e]):console.log(`  ‚ùå ${e}: NOT FOUND`)}),console.log("Optional Storage Keys:"),t.forEach(e=>{n.local.hasOwnProperty(e)?console.log(`  ‚úÖ ${e}:`,n.local[e]):console.log(`  ‚ÑπÔ∏è ${e}: Not present (optional)`)}),console.log("Sync Storage:");let s=!1;o.forEach(e=>{n.sync.hasOwnProperty(e)&&(console.log(`  ‚úÖ ${e}:`,n.sync[e]),s=!0)}),t.forEach(e=>{n.sync.hasOwnProperty(e)&&(console.log(`  ‚úÖ ${e}:`,n.sync[e]),s=!0)}),s||console.log("  ‚ÑπÔ∏è No relevant keys found in sync storage"),console.log("All Available Storage Keys:");const c=Object.keys(n.local);c.length>0?(console.log("  Local keys:",c.slice(0,10)),c.length>10&&console.log(`  ... and ${c.length-10} more keys`)):console.log("  ‚ÑπÔ∏è No local storage keys found");const i=Object.keys(n.sync);i.length>0?(console.log("  Sync keys:",i.slice(0,10)),i.length>10&&console.log(`  ... and ${i.length-10} more keys`)):console.log("  ‚ÑπÔ∏è No sync storage keys found"),console.log("üèóÔ∏è DOM Analysis:");const g=a();console.log(`Found ${g.length} elements with plan text`),g.length>0&&g.map(o=>{const t={text:o.text,pattern:o.pattern,element:{tagName:o.parent?.tagName,className:o.parent?.className,id:o.parent?.id,attributes:{}},ancestors:[]};if(o.parent?.attributes)for(const e of o.parent.attributes)t.element.attributes[e.name]=e.value;let n=o.parent,l=0;for(;n&&l<e.searchDepth;)t.ancestors.push({tagName:n.tagName,className:n.className,id:n.id,depth:l}),n=n.parentElement,l++;return t}).forEach((e,o)=>{console.log(`Element ${o+1}:`),console.log("  Text:",e.text),console.log("  Pattern:",e.pattern),console.log("  Element:",e.element),console.log("  Ancestors:",e.ancestors.slice(0,3))}),console.log("üåç Global Variables:");const u=r();Object.keys(u).forEach(e=>{console.log(`  ${e}:`,u[e])}),console.log("üîß Extension Context:"),console.log("  Chrome extension context:","undefined"!=typeof chrome),console.log("  Storage API available:",void 0!==chrome?.storage),console.log("  Current URL:",window.location.href),console.log("  Document ready state:",document.readyState),console.log("üîç === END DEBUG REPORT ===")}!function(){const e=window.fetch,o=window.XMLHttpRequest;window.fetch=function(...o){const t=o[0];return"string"==typeof t&&/plan|premium|subscription|auth/i.test(t)&&console.log("üåê Plan-related fetch request:",t),e.apply(this,o)};const t=o.prototype.open;o.prototype.open=function(e,o,...n){return"string"==typeof o&&/plan|premium|subscription|auth/i.test(o)&&console.log("üåê Plan-related XHR request:",e,o),t.apply(this,[e,o,...n])}}(),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",c):setTimeout(c,1e3),setInterval(c,e.monitorInterval),window.planDebug={run:c,findElements:a,getStorage:l,checkVars:r,config:e},console.log("‚úÖ Plan Debug Script initialized - use window.planDebug.run() to trigger manual debug")}();