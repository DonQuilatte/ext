{"version":3,"file":"manage.js","mappings":"uBAAIA,E,uCCyiBJ,SAASC,EAAYC,GAEF,CAAC,UAAW,UAAW,WAAY,SAC3CC,QAAQC,IACf,MAAMC,EAAUC,SAASC,eAAe,GAAGH,aACvCC,IAASA,EAAQG,MAAMC,QAAU,UAIvC,MAAMC,EAAgBJ,SAASC,eAAe,GAAGL,aAC7CQ,IAAeA,EAAcF,MAAMC,QAAU,SAG9BH,SAASK,iBAAiB,YAClCR,QAAQS,IACjBA,EAAIC,UAAUC,OAAO,UACpBF,EAAoBJ,MAAMO,WAAa,UACvCH,EAAoBJ,MAAMQ,MAAQ,SAGrC,MAAMC,EAAeX,SAASC,eAAe,OAAOL,KAChDe,IACFA,EAAaJ,UAAUK,IAAI,UAC1BD,EAA6BT,MAAMO,WAAa,UAChDE,EAA6BT,MAAMQ,MAAQ,QAEhD,CAGAG,eAAeC,IACb,IACEC,QAAQC,IAAI,+BAGZ,MAAMC,QAAiBC,OAAOC,QAAQC,YAAY,CAAEC,KAAM,cAEtDJ,EAASK,MAajB,SAA2BA,GACzB,IAEE,MAAMC,EAAgBvB,SAASC,eAAe,wBAC1CsB,IACED,EAAME,MAAMC,WACdF,EAAcG,YAAc,eAC5BH,EAAcrB,MAAMO,WAAa,oDACjCc,EAAcrB,MAAMQ,MAAQ,UAE5Ba,EAAcG,YAAc,YAC5BH,EAAcrB,MAAMO,WAAa,UACjCc,EAAcrB,MAAMQ,MAAQ,SAKhC,MAAMiB,EAAc3B,SAASC,eAAe,gBACxC0B,IAAaA,EAAYC,MAAQN,EAAME,MAAMK,aAAaC,OAAS,QAEvE,MAAMC,EAAiB/B,SAASC,eAAe,mBAC3C8B,IAAgBA,EAAeH,MAAQN,EAAME,MAAMK,aAAaG,UAAY,MAEhF,MAAMC,EAAsBjC,SAASC,eAAe,wBAChDgC,IAAqBA,EAAoBC,QAAUZ,EAAME,MAAMK,aAAaM,sBAAuB,GAEvG,MAAMC,EAAiBpC,SAASC,eAAe,oBAC3CmC,IAAgBA,EAAeF,QAAUZ,EAAME,MAAMK,aAAaQ,WAAY,GAElF,MAAMC,EAAmBtC,SAASC,eAAe,sBAC7CqC,IAAkBA,EAAiBV,MAAQN,EAAMiB,UAAUC,SAASF,kBAAkBG,YAAc,MAExG,MAAMC,EAAmB1C,SAASC,eAAe,qBAC7CyC,IAAkBA,EAAiBd,MAAQN,EAAMiB,UAAUC,SAASE,kBAAkBD,YAAc,OAExG,MAAME,EAAY3C,SAASC,eAAe,cACtC0C,IAAWA,EAAUT,QAAUZ,EAAMiB,UAAUC,SAASI,YAAa,GAEzE,MAAMC,EAAsB7C,SAASC,eAAe,yBAChD4C,IAAqBA,EAAoBX,QAAUZ,EAAMiB,UAAUC,SAASM,sBAAuB,GAGvG,MAAMC,EAAkB/C,SAASC,eAAe,qBAC5C8C,IAAiBA,EAAgBb,QAAUZ,EAAMiB,UAAUS,UAAUC,YAAa,GAEtF,MAAMC,EAAgBlD,SAASC,eAAe,kBAC1CiD,IAAeA,EAAchB,QAAUZ,EAAMiB,UAAUS,UAAUG,gBAAiB,GAEtF,MAAMC,EAAoBpD,SAASC,eAAe,uBAC9CmD,IAAmBA,EAAkBxB,MAAQN,EAAMiB,UAAUS,UAAUI,mBAAqB,IAGhG,MAAMC,EAAcrD,SAASC,eAAe,gBACxCoD,IACFA,EAAYC,UAAY,0KAGkBC,UAAUC,UAAUC,MAAM,mBAAmB,IAAM,iEACrD,IAAIC,MAAOC,sCAIrD5C,QAAQC,IAAI,0BACd,CAAE,MAAO4C,GACP7C,QAAQ6C,MAAM,oCAAqCA,EACrD,CACF,CA9EMC,CAAkB5C,EAASK,OAE3BP,QAAQ6C,MAAM,wBAGhB7C,QAAQC,IAAI,iBACd,CAAE,MAAO4C,GACP7C,QAAQ6C,MAAM,0BAA2BA,EAC3C,CACF,CAwEA/C,eAAeiD,IACb,IACE/C,QAAQC,IAAI,iCAEZ,MAAMuB,EAAW,CACff,KAAM,CACJK,YAAa,CACXC,MAAS9B,SAASC,eAAe,iBAAuC2B,OAAS,OACjFI,SAAWhC,SAASC,eAAe,oBAA0C2B,OAAS,KACtFO,oBAAsBnC,SAASC,eAAe,yBAA8CiC,UAAW,EACvGG,SAAWrC,SAASC,eAAe,qBAA0CiC,UAAW,IAG5FK,SAAU,CACRC,QAAS,CACPF,iBAAkByB,SAAU/D,SAASC,eAAe,uBAA4C2B,OAAS,MACzGc,iBAAkBqB,SAAU/D,SAASC,eAAe,sBAA2C2B,OAAS,OACxGgB,UAAY5C,SAASC,eAAe,eAAoCiC,UAAW,EACnFY,oBAAsB9C,SAASC,eAAe,0BAA+CiC,UAAW,WAKxG,KAAa8B,SAASzB,GAC5B0B,MAAM,gCAENlD,QAAQC,IAAI,2BACd,CAAE,MAAO4C,GACP7C,QAAQ6C,MAAM,qCAAsCA,GACpDK,MAAM,0BACR,CACF,CAEApD,eAAeqD,IACb,IACEnD,QAAQC,IAAI,oCAERmD,QAAQ,4EACJ,KAAaC,WAAW,CAC5BvC,YAAa,CACXC,MAAO,OACPE,SAAU,KACVG,qBAAqB,EACrBE,UAAU,WAIR,KAAagC,eAAe,CAChC7B,QAAS,CACPF,iBAAkB,IAClBI,iBAAkB,IAClBE,WAAW,EACXE,qBAAqB,WAInBhC,IACNmD,MAAM,wCAGRlD,QAAQC,IAAI,2BACd,CAAE,MAAO4C,GACP7C,QAAQ6C,MAAM,sCAAuCA,GACrDK,MAAM,2BACR,CACF,CAEA,SAASK,IACPvD,QAAQC,IAAI,iCACZE,OAAOqD,KAAKC,OAAO,CAAEC,IAAK,6CAC5B,CAEA5D,eAAe6D,IACb,IACE3D,QAAQC,IAAI,+CAEN,KAAaoD,WAAW,CAAE3C,WAAW,UACrC,KAAakD,IAAI,oBAAoB,SACrC,KAAaA,IAAI,gBAAgB,SAEjC7D,IACNmD,MAAM,wCAENlD,QAAQC,IAAI,mCACd,CAAE,MAAO4C,GACP7C,QAAQ6C,MAAM,uCAAwCA,GACtDK,MAAM,oCACR,CACF,CAEApD,eAAe+D,IACb,IACE7D,QAAQC,IAAI,gDAEN,KAAaoD,WAAW,CAAE3C,WAAW,UACrC,KAAajB,OAAO,0BACpB,KAAaA,OAAO,sBAEpBM,IACNmD,MAAM,yCAENlD,QAAQC,IAAI,oCACd,CAAE,MAAO4C,GACP7C,QAAQ6C,MAAM,wCAAyCA,GACvDK,MAAM,qCACR,CACF,CAEApD,eAAegE,IACb,IACE9D,QAAQC,IAAI,4BAEZ,MAAMM,EAAQ,KAAawD,WACrBC,EAAUC,KAAKC,UAAU3D,EAAO,KAAM,GACtC4D,EAAW,IAAIC,KAAK,CAACJ,GAAU,CAAE1D,KAAM,qBAEvCoD,EAAMW,IAAIC,gBAAgBH,GAC1BI,EAAOtF,SAASuF,cAAc,KACpCD,EAAKE,KAAOf,EACZa,EAAKG,SAAW,sBAChBH,EAAKI,QAELN,IAAIO,gBAAgBlB,GAEpB1D,QAAQC,IAAI,sBACd,CAAE,MAAO4C,GACP7C,QAAQ6C,MAAM,+BAAgCA,GAC9CK,MAAM,4BACR,CACF,CAEA,SAAS2B,IACP7E,QAAQC,IAAI,4BAEZ,MAAM6E,EAAQ7F,SAASuF,cAAc,SACrCM,EAAMxE,KAAO,OACbwE,EAAMC,OAAS,QACfD,EAAME,SAAWlF,MAAOmF,IACtB,IACE,MAAMC,EAAQD,EAAME,OAA4BC,QAAQ,GACxD,GAAIF,EAAM,CACR,MAAMG,QAAaH,EAAKG,OAClB7D,EAAWyC,KAAKqB,MAAMD,SAEtB,KAAapC,SAASzB,SACtBzB,IAENmD,MAAM,mCACNlD,QAAQC,IAAI,sBACd,CACF,CAAE,MAAO4C,GACP7C,QAAQ6C,MAAM,+BAAgCA,GAC9CK,MAAM,4BACR,GAEF4B,EAAMH,OACR,CAEA7E,eAAeyF,IACb,IACEvF,QAAQC,IAAI,gCAERmD,QAAQ,+EACJ,KAAaoC,mBACbzF,IACNmD,MAAM,oCAGRlD,QAAQC,IAAI,uBACd,CAAE,MAAO4C,GACP7C,QAAQ6C,MAAM,kCAAmCA,GACjDK,MAAM,2BACR,CACF,CAEA,SAASuC,IACPzF,QAAQC,IAAI,8BACZiD,MAAM,2CACR,CA90BAlD,QAAQC,IAAI,8CAGZhB,SAASyG,iBAAiB,mBAAoB5F,UAC5C,IACEE,QAAQC,IAAI,wCAkBhBH,iBACE,IACEE,QAAQC,IAAI,mCAGZ,MAAM0F,EAAY1G,SAASuF,cAAc,OACzCmB,EAAUC,GAAK,yBACfD,EAAUE,UAAY,eACtBF,EAAUxG,MAAM2G,QAAU,0NAU1B,MAAMC,EAsBV,WACE,MAAMA,EAAS9G,SAASuF,cAAc,OAuBtC,OAtBAuB,EAAOF,UAAY,gBACnBE,EAAO5G,MAAM2G,QAAU,mGAMvBC,EAAOxD,UAAY,ouBAeZwD,CACT,CA/CmBC,GACfL,EAAUM,YAAYF,GAGtB,MAAMG,EA8CV,WACE,MAAMA,EAAajH,SAASuF,cAAc,OAmD1C,OAlDA0B,EAAWL,UAAY,oBACvBK,EAAW/G,MAAM2G,QAAU,iCAI3BI,EAAW3D,UAAY,+xCA6ChB2D,CACT,CAnGuBC,GACnBR,EAAUM,YAAYC,GAGtB,MAAME,EAkGV,WACE,MAAMA,EAAUnH,SAASuF,cAAc,OACvC4B,EAAQP,UAAY,iBAGpB,MAAMQ,EAmBR,WACE,MAAMrH,EAAUC,SAASuF,cAAc,OAqHvC,OApHAxF,EAAQ4G,GAAK,kBACb5G,EAAQ6G,UAAY,kBAEpB7G,EAAQuD,UAAY,0nIAiHbvD,CACT,CA1IyBsH,GACjBC,EA4IR,WACE,MAAMvH,EAAUC,SAASuF,cAAc,OAyEvC,OAxEAxF,EAAQ4G,GAAK,kBACb5G,EAAQ6G,UAAY,kBAEpB7G,EAAQuD,UAAY,09FAqEbvD,CACT,CAvNyBwH,GACjBC,EAyNR,WACE,MAAMzH,EAAUC,SAASuF,cAAc,OAwEvC,OAvEAxF,EAAQ4G,GAAK,mBACb5G,EAAQ6G,UAAY,kBAEpB7G,EAAQuD,UAAY,s9EAoEbvD,CACT,CAnS0B0H,GAClBC,EAqSR,WACE,MAAM3H,EAAUC,SAASuF,cAAc,OAmEvC,OAlEAxF,EAAQ4G,GAAK,gBACb5G,EAAQ6G,UAAY,kBAEpB7G,EAAQuD,UAAY,y0EA+DbvD,CACT,CA1WuB4H,GAYrB,OATAL,EAAepH,MAAMC,QAAU,OAC/BqH,EAAgBtH,MAAMC,QAAU,OAChCuH,EAAaxH,MAAMC,QAAU,OAE7BgH,EAAQH,YAAYI,GACpBD,EAAQH,YAAYM,GACpBH,EAAQH,YAAYQ,GACpBL,EAAQH,YAAYU,GAEbP,CACT,CAvHoBS,GAChBlB,EAAUM,YAAYG,GAGtBnH,SAAS6H,KAAKvE,UAAY,GAC1BtD,SAAS6H,KAAKb,YAAYN,GAE1B3F,QAAQC,IAAI,2BACd,CAAE,MAAO4C,GACP7C,QAAQ6C,MAAM,qCAAsCA,EACtD,CACF,CApDUkE,GAigBR/G,QAAQC,IAAI,gDAGZhB,SAASC,eAAe,gBAAgBwG,iBAAiB,QAAS,IAAM9G,EAAY,YACpFK,SAASC,eAAe,gBAAgBwG,iBAAiB,QAAS,IAAM9G,EAAY,YACpFK,SAASC,eAAe,iBAAiBwG,iBAAiB,QAAS,IAAM9G,EAAY,aACrFK,SAASC,eAAe,cAAcwG,iBAAiB,QAAS,IAAM9G,EAAY,UAGlFK,SAASC,eAAe,iBAAiBwG,iBAAiB,QAAS3C,GACnE9D,SAASC,eAAe,kBAAkBwG,iBAAiB,QAASvC,GAGpElE,SAASC,eAAe,oBAAoBwG,iBAAiB,QAASnC,GACtEtE,SAASC,eAAe,uBAAuBwG,iBAAiB,QAAS/B,GACzE1E,SAASC,eAAe,wBAAwBwG,iBAAiB,QAAS7B,GAG1E5E,SAASC,eAAe,oBAAoBwG,iBAAiB,QAAS5B,GACtE7E,SAASC,eAAe,oBAAoBwG,iBAAiB,QAASb,GACtE5F,SAASC,eAAe,cAAcwG,iBAAiB,QAASH,GAGhEtG,SAASC,eAAe,kBAAkBwG,iBAAiB,QAASD,GAEpEzF,QAAQC,IAAI,8CAphBJF,IAENC,QAAQC,IAAI,wCACd,CAAE,MAAO4C,GACP7C,QAAQ6C,MAAM,uCAAwCA,EACxD,IA6zBF7C,QAAQC,IAAI,yC,GCl1BR+G,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CAGAJ,EAAoBO,EAAID,EFzBpB5I,EAAW,GACfsI,EAAoBQ,EAAI,CAACC,EAAQC,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASC,EAAI,EAAGA,EAAIrJ,EAASsJ,OAAQD,IAAK,CAGzC,IAFA,IAAKL,EAAUC,EAAIC,GAAYlJ,EAASqJ,GACpCE,GAAY,EACPC,EAAI,EAAGA,EAAIR,EAASM,OAAQE,MACpB,EAAXN,GAAsBC,GAAgBD,IAAaO,OAAOC,KAAKpB,EAAoBQ,GAAGa,MAAOC,GAAStB,EAAoBQ,EAAEc,GAAKZ,EAASQ,KAC9IR,EAASa,OAAOL,IAAK,IAErBD,GAAY,EACTL,EAAWC,IAAcA,EAAeD,IAG7C,GAAGK,EAAW,CACbvJ,EAAS6J,OAAOR,IAAK,GACrB,IAAIS,EAAIb,SACER,IAANqB,IAAiBf,EAASe,EAC/B,CACD,CACA,OAAOf,CAnBP,CAJCG,EAAWA,GAAY,EACvB,IAAI,IAAIG,EAAIrJ,EAASsJ,OAAQD,EAAI,GAAKrJ,EAASqJ,EAAI,GAAG,GAAKH,EAAUG,IAAKrJ,EAASqJ,GAAKrJ,EAASqJ,EAAI,GACrGrJ,EAASqJ,GAAK,CAACL,EAAUC,EAAIC,IGJ/BZ,EAAoByB,EAAI,CAACrB,EAASsB,KACjC,IAAI,IAAIJ,KAAOI,EACX1B,EAAoB2B,EAAED,EAAYJ,KAAStB,EAAoB2B,EAAEvB,EAASkB,IAC5EH,OAAOS,eAAexB,EAASkB,EAAK,CAAEO,YAAY,EAAMC,IAAKJ,EAAWJ,MCJ3EtB,EAAoB2B,EAAI,CAACI,EAAKC,IAAUb,OAAOc,UAAUC,eAAeC,KAAKJ,EAAKC,G,MCKlF,IAAII,EAAkB,CACrB,IAAK,GAaNpC,EAAoBQ,EAAEU,EAAKmB,GAA0C,IAA7BD,EAAgBC,GAGxD,IAAIC,EAAuB,CAACC,EAA4BC,KACvD,IAGIvC,EAAUoC,GAHT3B,EAAU+B,EAAatJ,GAAWqJ,EAGhBzB,EAAI,EAC3B,GAAGL,EAASgC,KAAM/D,GAAgC,IAAxByD,EAAgBzD,IAAa,CACtD,IAAIsB,KAAYwC,EACZzC,EAAoB2B,EAAEc,EAAaxC,KACrCD,EAAoBO,EAAEN,GAAYwC,EAAYxC,IAGhD,GAAG9G,EAAS,IAAIsH,EAAStH,EAAQ6G,EAClC,CAEA,IADGuC,GAA4BA,EAA2BC,GACrDzB,EAAIL,EAASM,OAAQD,IACzBsB,EAAU3B,EAASK,GAChBf,EAAoB2B,EAAES,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOrC,EAAoBQ,EAAEC,IAG1BkC,EAAqBC,KAAkC,4BAAIA,KAAkC,6BAAK,GACtGD,EAAmB9K,QAAQyK,EAAqBO,KAAK,KAAM,IAC3DF,EAAmBG,KAAOR,EAAqBO,KAAK,KAAMF,EAAmBG,KAAKD,KAAKF,G,KC7CvF,IAAII,EAAsB/C,EAAoBQ,OAAEL,EAAW,CAAC,KAAM,IAAOH,EAAoB,MAC7F+C,EAAsB/C,EAAoBQ,EAAEuC,E","sources":["webpack://ishka-extension/webpack/runtime/chunk loaded","webpack://ishka-extension/./src/manage/index.ts","webpack://ishka-extension/webpack/bootstrap","webpack://ishka-extension/webpack/runtime/define property getters","webpack://ishka-extension/webpack/runtime/hasOwnProperty shorthand","webpack://ishka-extension/webpack/runtime/jsonp chunk loading","webpack://ishka-extension/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { stateManager } from '@shared/state';\nimport { storageUtils } from '@shared/utils';\n\nconsole.log('🎯 Ishka Extension Manage Page Initialized');\n\n// Initialize manage page when DOM is ready\ndocument.addEventListener('DOMContentLoaded', async () => {\n  try {\n    console.log('🚀 Initializing manage page...');\n    \n    // Initialize manage page UI\n    await initializeManagePageUI();\n    \n    // Set up event listeners\n    setupManagePageEventListeners();\n    \n    // Load current state\n    await loadCurrentState();\n    \n    console.log('✅ Manage page initialization complete');\n  } catch (error) {\n    console.error('❌ Manage page initialization failed:', error);\n  }\n});\n\n// Initialize manage page UI\nasync function initializeManagePageUI(): Promise<void> {\n  try {\n    console.log('🎨 Setting up manage page UI...');\n    \n    // Create main container\n    const container = document.createElement('div');\n    container.id = 'ishka-manage-container';\n    container.className = 'ishka-manage';\n    container.style.cssText = `\n      max-width: 800px;\n      margin: 0 auto;\n      padding: 24px;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      background: white;\n      min-height: 100vh;\n    `;\n    \n    // Add header\n    const header = createManageHeader();\n    container.appendChild(header);\n    \n    // Add navigation\n    const navigation = createNavigation();\n    container.appendChild(navigation);\n    \n    // Add content sections\n    const content = createManageContent();\n    container.appendChild(content);\n    \n    // Replace existing content\n    document.body.innerHTML = '';\n    document.body.appendChild(container);\n    \n    console.log('✅ Manage page UI created');\n  } catch (error) {\n    console.error('❌ Failed to create manage page UI:', error);\n  }\n}\n\n// Create manage page header\nfunction createManageHeader(): HTMLElement {\n  const header = document.createElement('div');\n  header.className = 'manage-header';\n  header.style.cssText = `\n    margin-bottom: 32px;\n    padding-bottom: 16px;\n    border-bottom: 2px solid #e5e5e5;\n  `;\n  \n  header.innerHTML = `\n    <div style=\"display: flex; align-items: center; justify-content: space-between;\">\n      <div style=\"display: flex; align-items: center; gap: 12px;\">\n        <div style=\"width: 32px; height: 32px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-radius: 8px;\"></div>\n        <div>\n          <h1 style=\"margin: 0; font-size: 24px; font-weight: 600; color: #333;\">Ishka Settings</h1>\n          <p style=\"margin: 4px 0 0 0; font-size: 14px; color: #666;\">Manage your extension preferences</p>\n        </div>\n      </div>\n      <div id=\"premium-status-large\" style=\"font-size: 14px; padding: 8px 16px; border-radius: 20px; background: #f0f0f0; color: #666;\">\n        Free Plan\n      </div>\n    </div>\n  `;\n  \n  return header;\n}\n\n// Create navigation\nfunction createNavigation(): HTMLElement {\n  const navigation = document.createElement('div');\n  navigation.className = 'manage-navigation';\n  navigation.style.cssText = `\n    margin-bottom: 24px;\n  `;\n  \n  navigation.innerHTML = `\n    <div style=\"display: flex; gap: 8px; border-bottom: 1px solid #e5e5e5;\">\n      <button id=\"nav-general\" class=\"nav-btn active\" style=\"\n        padding: 12px 20px;\n        border: none;\n        background: #10a37f;\n        color: white;\n        border-radius: 6px 6px 0 0;\n        font-size: 14px;\n        font-weight: 500;\n        cursor: pointer;\n      \">General</button>\n      <button id=\"nav-premium\" class=\"nav-btn\" style=\"\n        padding: 12px 20px;\n        border: none;\n        background: #f0f0f0;\n        color: #666;\n        border-radius: 6px 6px 0 0;\n        font-size: 14px;\n        font-weight: 500;\n        cursor: pointer;\n      \">Premium</button>\n      <button id=\"nav-advanced\" class=\"nav-btn\" style=\"\n        padding: 12px 20px;\n        border: none;\n        background: #f0f0f0;\n        color: #666;\n        border-radius: 6px 6px 0 0;\n        font-size: 14px;\n        font-weight: 500;\n        cursor: pointer;\n      \">Advanced</button>\n      <button id=\"nav-about\" class=\"nav-btn\" style=\"\n        padding: 12px 20px;\n        border: none;\n        background: #f0f0f0;\n        color: #666;\n        border-radius: 6px 6px 0 0;\n        font-size: 14px;\n        font-weight: 500;\n        cursor: pointer;\n      \">About</button>\n    </div>\n  `;\n  \n  return navigation;\n}\n\n// Create manage content\nfunction createManageContent(): HTMLElement {\n  const content = document.createElement('div');\n  content.className = 'manage-content';\n  \n  // Create content sections\n  const generalSection = createGeneralSection();\n  const premiumSection = createPremiumSection();\n  const advancedSection = createAdvancedSection();\n  const aboutSection = createAboutSection();\n  \n  // Hide all sections except general initially\n  premiumSection.style.display = 'none';\n  advancedSection.style.display = 'none';\n  aboutSection.style.display = 'none';\n  \n  content.appendChild(generalSection);\n  content.appendChild(premiumSection);\n  content.appendChild(advancedSection);\n  content.appendChild(aboutSection);\n  \n  return content;\n}\n\n// Create general settings section\nfunction createGeneralSection(): HTMLElement {\n  const section = document.createElement('div');\n  section.id = 'general-section';\n  section.className = 'content-section';\n  \n  section.innerHTML = `\n    <h2 style=\"margin: 0 0 20px 0; font-size: 18px; font-weight: 600; color: #333;\">General Settings</h2>\n    \n    <div class=\"setting-group\" style=\"margin-bottom: 24px;\">\n      <label style=\"display: block; margin-bottom: 8px; font-weight: 500; color: #333;\">Theme</label>\n      <select id=\"theme-select\" style=\"\n        width: 200px;\n        padding: 8px 12px;\n        border: 1px solid #e5e5e5;\n        border-radius: 6px;\n        font-size: 14px;\n      \">\n        <option value=\"auto\">Auto</option>\n        <option value=\"light\">Light</option>\n        <option value=\"dark\">Dark</option>\n      </select>\n    </div>\n    \n    <div class=\"setting-group\" style=\"margin-bottom: 24px;\">\n      <label style=\"display: block; margin-bottom: 8px; font-weight: 500; color: #333;\">Language</label>\n      <select id=\"language-select\" style=\"\n        width: 200px;\n        padding: 8px 12px;\n        border: 1px solid #e5e5e5;\n        border-radius: 6px;\n        font-size: 14px;\n      \">\n        <option value=\"en\">English</option>\n        <option value=\"es\">Español</option>\n        <option value=\"fr\">Français</option>\n        <option value=\"de\">Deutsch</option>\n        <option value=\"it\">Italiano</option>\n        <option value=\"pt\">Português</option>\n        <option value=\"ru\">Русский</option>\n        <option value=\"zh\">中文</option>\n      </select>\n    </div>\n    \n    <div class=\"setting-group\" style=\"margin-bottom: 24px;\">\n      <label style=\"display: flex; align-items: center; gap: 8px; font-weight: 500; color: #333;\">\n        <input type=\"checkbox\" id=\"notifications-toggle\" style=\"width: 16px; height: 16px;\">\n        Enable Notifications\n      </label>\n    </div>\n    \n    <div class=\"setting-group\" style=\"margin-bottom: 24px;\">\n      <label style=\"display: flex; align-items: center; gap: 8px; font-weight: 500; color: #333;\">\n        <input type=\"checkbox\" id=\"auto-save-toggle\" style=\"width: 16px; height: 16px;\">\n        Auto-save Conversations\n      </label>\n    </div>\n    \n    <div class=\"setting-group\" style=\"margin-bottom: 24px;\">\n      <label style=\"display: block; margin-bottom: 8px; font-weight: 500; color: #333;\">Auto-save Interval (seconds)</label>\n      <input type=\"number\" id=\"auto-save-interval\" min=\"10\" max=\"300\" value=\"30\" style=\"\n        width: 200px;\n        padding: 8px 12px;\n        border: 1px solid #e5e5e5;\n        border-radius: 6px;\n        font-size: 14px;\n      \">\n    </div>\n    \n    <div class=\"setting-group\" style=\"margin-bottom: 24px;\">\n      <label style=\"display: block; margin-bottom: 8px; font-weight: 500; color: #333;\">Maximum Conversations</label>\n      <input type=\"number\" id=\"max-conversations\" min=\"10\" max=\"1000\" value=\"100\" style=\"\n        width: 200px;\n        padding: 8px 12px;\n        border: 1px solid #e5e5e5;\n        border-radius: 6px;\n        font-size: 14px;\n      \">\n    </div>\n    \n    <div class=\"setting-group\" style=\"margin-bottom: 24px;\">\n      <label style=\"display: flex; align-items: center; gap: 8px; font-weight: 500; color: #333;\">\n        <input type=\"checkbox\" id=\"rtl-toggle\" style=\"width: 16px; height: 16px;\">\n        Enable RTL Support\n      </label>\n    </div>\n    \n    <div class=\"setting-group\" style=\"margin-bottom: 24px;\">\n      <label style=\"display: flex; align-items: center; gap: 8px; font-weight: 500; color: #333;\">\n        <input type=\"checkbox\" id=\"voice-download-toggle\" style=\"width: 16px; height: 16px;\">\n        Enable Voice Download\n      </label>\n    </div>\n    \n    <div style=\"margin-top: 32px;\">\n      <button id=\"save-general\" style=\"\n        padding: 12px 24px;\n        background: #10a37f;\n        color: white;\n        border: none;\n        border-radius: 6px;\n        font-size: 14px;\n        font-weight: 500;\n        cursor: pointer;\n        margin-right: 12px;\n      \">Save Settings</button>\n      <button id=\"reset-general\" style=\"\n        padding: 12px 24px;\n        background: #f0f0f0;\n        color: #666;\n        border: none;\n        border-radius: 6px;\n        font-size: 14px;\n        font-weight: 500;\n        cursor: pointer;\n      \">Reset to Defaults</button>\n    </div>\n  `;\n  \n  return section;\n}\n\n// Create premium settings section\nfunction createPremiumSection(): HTMLElement {\n  const section = document.createElement('div');\n  section.id = 'premium-section';\n  section.className = 'content-section';\n  \n  section.innerHTML = `\n    <h2 style=\"margin: 0 0 20px 0; font-size: 18px; font-weight: 600; color: #333;\">Premium Features</h2>\n    \n    <div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 24px; border-radius: 12px; margin-bottom: 24px;\">\n      <h3 style=\"margin: 0 0 12px 0; font-size: 20px;\">Upgrade to Premium</h3>\n      <p style=\"margin: 0 0 16px 0; opacity: 0.9;\">Unlock advanced features and enhance your ChatGPT experience</p>\n      <button id=\"upgrade-premium\" style=\"\n        padding: 12px 24px;\n        background: white;\n        color: #667eea;\n        border: none;\n        border-radius: 6px;\n        font-size: 14px;\n        font-weight: 600;\n        cursor: pointer;\n      \">Upgrade Now</button>\n    </div>\n    \n    <div class=\"feature-list\" style=\"margin-bottom: 24px;\">\n      <h3 style=\"margin: 0 0 16px 0; font-size: 16px; font-weight: 600; color: #333;\">Premium Features</h3>\n      <ul style=\"list-style: none; padding: 0; margin: 0;\">\n        <li style=\"display: flex; align-items: center; gap: 8px; margin-bottom: 12px; padding: 12px; background: #f8f9fa; border-radius: 6px;\">\n          <span style=\"color: #10a37f; font-weight: bold;\">✓</span>\n          Advanced Prompt Library\n        </li>\n        <li style=\"display: flex; align-items: center; gap: 8px; margin-bottom: 12px; padding: 12px; background: #f8f9fa; border-radius: 6px;\">\n          <span style=\"color: #10a37f; font-weight: bold;\">✓</span>\n          Unlimited Conversation Export\n        </li>\n        <li style=\"display: flex; align-items: center; gap: 8px; margin-bottom: 12px; padding: 12px; background: #f8f9fa; border-radius: 6px;\">\n          <span style=\"color: #10a37f; font-weight: bold;\">✓</span>\n          Voice Download (MP3)\n        </li>\n        <li style=\"display: flex; align-items: center; gap: 8px; margin-bottom: 12px; padding: 12px; background: #f8f9fa; border-radius: 6px;\">\n          <span style=\"color: #10a37f; font-weight: bold;\">✓</span>\n          Advanced Search & Filtering\n        </li>\n        <li style=\"display: flex; align-items: center; gap: 8px; margin-bottom: 12px; padding: 12px; background: #f8f9fa; border-radius: 6px;\">\n          <span style=\"color: #10a37f; font-weight: bold;\">✓</span>\n          Priority Support\n        </li>\n      </ul>\n    </div>\n    \n    <div style=\"margin-top: 32px;\">\n      <button id=\"enable-premium-dev\" style=\"\n        padding: 12px 24px;\n        background: #ff6b6b;\n        color: white;\n        border: none;\n        border-radius: 6px;\n        font-size: 14px;\n        font-weight: 500;\n        cursor: pointer;\n        margin-right: 12px;\n      \">Enable Premium (Dev)</button>\n      <button id=\"disable-premium-dev\" style=\"\n        padding: 12px 24px;\n        background: #f0f0f0;\n        color: #666;\n        border: none;\n        border-radius: 6px;\n        font-size: 14px;\n        font-weight: 500;\n        cursor: pointer;\n      \">Disable Premium (Dev)</button>\n    </div>\n  `;\n  \n  return section;\n}\n\n// Create advanced settings section\nfunction createAdvancedSection(): HTMLElement {\n  const section = document.createElement('div');\n  section.id = 'advanced-section';\n  section.className = 'content-section';\n  \n  section.innerHTML = `\n    <h2 style=\"margin: 0 0 20px 0; font-size: 18px; font-weight: 600; color: #333;\">Advanced Settings</h2>\n    \n    <div class=\"setting-group\" style=\"margin-bottom: 24px;\">\n      <label style=\"display: flex; align-items: center; gap: 8px; font-weight: 500; color: #333;\">\n        <input type=\"checkbox\" id=\"debug-mode-toggle\" style=\"width: 16px; height: 16px;\">\n        Debug Mode\n      </label>\n      <p style=\"margin: 4px 0 0 0; font-size: 12px; color: #666;\">Enable detailed logging for troubleshooting</p>\n    </div>\n    \n    <div class=\"setting-group\" style=\"margin-bottom: 24px;\">\n      <label style=\"display: flex; align-items: center; gap: 8px; font-weight: 500; color: #333;\">\n        <input type=\"checkbox\" id=\"logging-toggle\" style=\"width: 16px; height: 16px;\">\n        Enable Logging\n      </label>\n      <p style=\"margin: 4px 0 0 0; font-size: 12px; color: #666;\">Log extension activities for analysis</p>\n    </div>\n    \n    <div class=\"setting-group\" style=\"margin-bottom: 24px;\">\n      <label style=\"display: block; margin-bottom: 8px; font-weight: 500; color: #333;\">Custom API Endpoint</label>\n      <input type=\"text\" id=\"custom-api-endpoint\" placeholder=\"https://api.example.com\" style=\"\n        width: 100%;\n        max-width: 400px;\n        padding: 8px 12px;\n        border: 1px solid #e5e5e5;\n        border-radius: 6px;\n        font-size: 14px;\n      \">\n      <p style=\"margin: 4px 0 0 0; font-size: 12px; color: #666;\">Leave empty to use default ChatGPT API</p>\n    </div>\n    \n    <div style=\"margin-top: 32px;\">\n      <button id=\"export-settings\" style=\"\n        padding: 12px 24px;\n        background: #10a37f;\n        color: white;\n        border: none;\n        border-radius: 6px;\n        font-size: 14px;\n        font-weight: 500;\n        cursor: pointer;\n        margin-right: 12px;\n      \">Export Settings</button>\n      <button id=\"import-settings\" style=\"\n        padding: 12px 24px;\n        background: #f0f0f0;\n        color: #666;\n        border: none;\n        border-radius: 6px;\n        font-size: 14px;\n        font-weight: 500;\n        cursor: pointer;\n        margin-right: 12px;\n      \">Import Settings</button>\n      <button id=\"reset-all\" style=\"\n        padding: 12px 24px;\n        background: #ff6b6b;\n        color: white;\n        border: none;\n        border-radius: 6px;\n        font-size: 14px;\n        font-weight: 500;\n        cursor: pointer;\n      \">Reset All Settings</button>\n    </div>\n  `;\n  \n  return section;\n}\n\n// Create about section\nfunction createAboutSection(): HTMLElement {\n  const section = document.createElement('div');\n  section.id = 'about-section';\n  section.className = 'content-section';\n  \n  section.innerHTML = `\n    <h2 style=\"margin: 0 0 20px 0; font-size: 18px; font-weight: 600; color: #333;\">About Ishka</h2>\n    \n    <div style=\"background: #f8f9fa; padding: 24px; border-radius: 12px; margin-bottom: 24px;\">\n      <h3 style=\"margin: 0 0 12px 0; font-size: 16px; font-weight: 600; color: #333;\">Version Information</h3>\n      <div id=\"version-info\" style=\"font-size: 14px; color: #666; line-height: 1.6;\">\n        Loading...\n      </div>\n    </div>\n    \n    <div style=\"margin-bottom: 24px;\">\n      <h3 style=\"margin: 0 0 12px 0; font-size: 16px; font-weight: 600; color: #333;\">Features</h3>\n      <ul style=\"margin: 0; padding-left: 20px; line-height: 1.6;\">\n        <li>Enhanced ChatGPT interface</li>\n        <li>Conversation management and organization</li>\n        <li>Prompt library and templates</li>\n        <li>Export conversations in multiple formats</li>\n        <li>Voice download capabilities</li>\n        <li>Advanced search and filtering</li>\n        <li>RTL language support</li>\n        <li>Custom themes and preferences</li>\n      </ul>\n    </div>\n    \n    <div style=\"margin-bottom: 24px;\">\n      <h3 style=\"margin: 0 0 12px 0; font-size: 16px; font-weight: 600; color: #333;\">Support</h3>\n      <p style=\"margin: 0 0 12px 0; line-height: 1.6;\">\n        Need help? Check out our documentation or contact support.\n      </p>\n      <div style=\"display: flex; gap: 12px;\">\n        <a href=\"https://github.com/DonQuilatte/ext#readme\" target=\"_blank\" style=\"\n          padding: 8px 16px;\n          background: #10a37f;\n          color: white;\n          text-decoration: none;\n          border-radius: 6px;\n          font-size: 14px;\n        \">Documentation</a>\n        <a href=\"https://github.com/DonQuilatte/ext/issues\" target=\"_blank\" style=\"\n          padding: 8px 16px;\n          background: #f0f0f0;\n          color: #666;\n          text-decoration: none;\n          border-radius: 6px;\n          font-size: 14px;\n        \">Report Issue</a>\n      </div>\n    </div>\n    \n    <div style=\"margin-top: 32px;\">\n      <button id=\"check-updates\" style=\"\n        padding: 12px 24px;\n        background: #10a37f;\n        color: white;\n        border: none;\n        border-radius: 6px;\n        font-size: 14px;\n        font-weight: 500;\n        cursor: pointer;\n      \">Check for Updates</button>\n    </div>\n  `;\n  \n  return section;\n}\n\n// Set up manage page event listeners\nfunction setupManagePageEventListeners(): void {\n  console.log('🎧 Setting up manage page event listeners...');\n  \n  // Navigation\n  document.getElementById('nav-general')?.addEventListener('click', () => showSection('general'));\n  document.getElementById('nav-premium')?.addEventListener('click', () => showSection('premium'));\n  document.getElementById('nav-advanced')?.addEventListener('click', () => showSection('advanced'));\n  document.getElementById('nav-about')?.addEventListener('click', () => showSection('about'));\n  \n  // General settings\n  document.getElementById('save-general')?.addEventListener('click', handleSaveGeneral);\n  document.getElementById('reset-general')?.addEventListener('click', handleResetGeneral);\n  \n  // Premium settings\n  document.getElementById('upgrade-premium')?.addEventListener('click', handleUpgradePremium);\n  document.getElementById('enable-premium-dev')?.addEventListener('click', handleEnablePremiumDev);\n  document.getElementById('disable-premium-dev')?.addEventListener('click', handleDisablePremiumDev);\n  \n  // Advanced settings\n  document.getElementById('export-settings')?.addEventListener('click', handleExportSettings);\n  document.getElementById('import-settings')?.addEventListener('click', handleImportSettings);\n  document.getElementById('reset-all')?.addEventListener('click', handleResetAll);\n  \n  // About\n  document.getElementById('check-updates')?.addEventListener('click', handleCheckUpdates);\n  \n  console.log('✅ Manage page event listeners set up');\n}\n\n// Show specific section\nfunction showSection(sectionName: string): void {\n  // Hide all sections\n  const sections = ['general', 'premium', 'advanced', 'about'];\n  sections.forEach(name => {\n    const section = document.getElementById(`${name}-section`);\n    if (section) section.style.display = 'none';\n  });\n  \n  // Show target section\n  const targetSection = document.getElementById(`${sectionName}-section`);\n  if (targetSection) targetSection.style.display = 'block';\n  \n  // Update navigation\n  const navButtons = document.querySelectorAll('.nav-btn');\n  navButtons.forEach(btn => {\n    btn.classList.remove('active');\n    (btn as HTMLElement).style.background = '#f0f0f0';\n    (btn as HTMLElement).style.color = '#666';\n  });\n  \n  const activeButton = document.getElementById(`nav-${sectionName}`);\n  if (activeButton) {\n    activeButton.classList.add('active');\n    (activeButton as HTMLElement).style.background = '#10a37f';\n    (activeButton as HTMLElement).style.color = 'white';\n  }\n}\n\n// Load current state\nasync function loadCurrentState(): Promise<void> {\n  try {\n    console.log('📊 Loading current state...');\n    \n    // Get state from background script\n    const response = await chrome.runtime.sendMessage({ type: 'GET_STATE' });\n    \n    if (response.state) {\n      updateUIWithState(response.state);\n    } else {\n      console.error('Failed to load state');\n    }\n    \n    console.log('✅ State loaded');\n  } catch (error) {\n    console.error('❌ Failed to load state:', error);\n  }\n}\n\n// Update UI with state\nfunction updateUIWithState(state: any): void {\n  try {\n    // Update premium status\n    const premiumStatus = document.getElementById('premium-status-large');\n    if (premiumStatus) {\n      if (state.user?.isPremium) {\n        premiumStatus.textContent = 'Premium Plan';\n        premiumStatus.style.background = 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)';\n        premiumStatus.style.color = 'white';\n      } else {\n        premiumStatus.textContent = 'Free Plan';\n        premiumStatus.style.background = '#f0f0f0';\n        premiumStatus.style.color = '#666';\n      }\n    }\n    \n    // Update general settings\n    const themeSelect = document.getElementById('theme-select') as HTMLSelectElement;\n    if (themeSelect) themeSelect.value = state.user?.preferences?.theme || 'auto';\n    \n    const languageSelect = document.getElementById('language-select') as HTMLSelectElement;\n    if (languageSelect) languageSelect.value = state.user?.preferences?.language || 'en';\n    \n    const notificationsToggle = document.getElementById('notifications-toggle') as HTMLInputElement;\n    if (notificationsToggle) notificationsToggle.checked = state.user?.preferences?.enableNotifications || false;\n    \n    const autoSaveToggle = document.getElementById('auto-save-toggle') as HTMLInputElement;\n    if (autoSaveToggle) autoSaveToggle.checked = state.user?.preferences?.autoSave || false;\n    \n    const autoSaveInterval = document.getElementById('auto-save-interval') as HTMLInputElement;\n    if (autoSaveInterval) autoSaveInterval.value = state.settings?.general?.autoSaveInterval?.toString() || '30';\n    \n    const maxConversations = document.getElementById('max-conversations') as HTMLInputElement;\n    if (maxConversations) maxConversations.value = state.settings?.general?.maxConversations?.toString() || '100';\n    \n    const rtlToggle = document.getElementById('rtl-toggle') as HTMLInputElement;\n    if (rtlToggle) rtlToggle.checked = state.settings?.general?.enableRTL || false;\n    \n    const voiceDownloadToggle = document.getElementById('voice-download-toggle') as HTMLInputElement;\n    if (voiceDownloadToggle) voiceDownloadToggle.checked = state.settings?.general?.enableVoiceDownload || false;\n    \n    // Update advanced settings\n    const debugModeToggle = document.getElementById('debug-mode-toggle') as HTMLInputElement;\n    if (debugModeToggle) debugModeToggle.checked = state.settings?.advanced?.debugMode || false;\n    \n    const loggingToggle = document.getElementById('logging-toggle') as HTMLInputElement;\n    if (loggingToggle) loggingToggle.checked = state.settings?.advanced?.enableLogging || false;\n    \n    const customApiEndpoint = document.getElementById('custom-api-endpoint') as HTMLInputElement;\n    if (customApiEndpoint) customApiEndpoint.value = state.settings?.advanced?.customApiEndpoint || '';\n    \n    // Update version info\n    const versionInfo = document.getElementById('version-info');\n    if (versionInfo) {\n      versionInfo.innerHTML = `\n        <div><strong>Extension Version:</strong> 3.9.7</div>\n        <div><strong>Manifest Version:</strong> 3</div>\n        <div><strong>Chrome Version:</strong> ${navigator.userAgent.match(/Chrome\\/(\\d+)/)?.[1] || 'Unknown'}</div>\n        <div><strong>Last Updated:</strong> ${new Date().toLocaleDateString()}</div>\n      `;\n    }\n    \n    console.log('✅ UI updated with state');\n  } catch (error) {\n    console.error('❌ Failed to update UI with state:', error);\n  }\n}\n\n// Event handlers\nasync function handleSaveGeneral(): Promise<void> {\n  try {\n    console.log('💾 Saving general settings...');\n    \n    const settings = {\n      user: {\n        preferences: {\n          theme: ((document.getElementById('theme-select') as HTMLSelectElement)?.value || 'auto') as 'auto' | 'light' | 'dark',\n          language: (document.getElementById('language-select') as HTMLSelectElement)?.value || 'en',\n          enableNotifications: (document.getElementById('notifications-toggle') as HTMLInputElement)?.checked || false,\n          autoSave: (document.getElementById('auto-save-toggle') as HTMLInputElement)?.checked || false,\n        },\n      },\n      settings: {\n        general: {\n          autoSaveInterval: parseInt((document.getElementById('auto-save-interval') as HTMLInputElement)?.value || '30'),\n          maxConversations: parseInt((document.getElementById('max-conversations') as HTMLInputElement)?.value || '100'),\n          enableRTL: (document.getElementById('rtl-toggle') as HTMLInputElement)?.checked || false,\n          enableVoiceDownload: (document.getElementById('voice-download-toggle') as HTMLInputElement)?.checked || false,\n        },\n      },\n    };\n    \n    await stateManager.setState(settings);\n    alert('Settings saved successfully!');\n    \n    console.log('✅ General settings saved');\n  } catch (error) {\n    console.error('❌ Failed to save general settings:', error);\n    alert('Failed to save settings');\n  }\n}\n\nasync function handleResetGeneral(): Promise<void> {\n  try {\n    console.log('🔄 Resetting general settings...');\n    \n    if (confirm('Are you sure you want to reset all general settings to defaults?')) {\n      await stateManager.updateUser({\n        preferences: {\n          theme: 'auto',\n          language: 'en',\n          enableNotifications: true,\n          autoSave: true,\n        },\n      });\n      \n      await stateManager.updateSettings({\n        general: {\n          autoSaveInterval: 30000,\n          maxConversations: 100,\n          enableRTL: false,\n          enableVoiceDownload: false,\n        },\n      });\n      \n      await loadCurrentState();\n      alert('General settings reset to defaults!');\n    }\n    \n    console.log('✅ General settings reset');\n  } catch (error) {\n    console.error('❌ Failed to reset general settings:', error);\n    alert('Failed to reset settings');\n  }\n}\n\nfunction handleUpgradePremium(): void {\n  console.log('💎 Opening premium upgrade...');\n  chrome.tabs.create({ url: 'https://github.com/DonQuilatte/ext#readme' });\n}\n\nasync function handleEnablePremiumDev(): Promise<void> {\n  try {\n    console.log('💎 Enabling premium features (dev)...');\n    \n    await stateManager.updateUser({ isPremium: true });\n    await storageUtils.set('DEV_MODE_PREMIUM', true);\n    await storageUtils.set('MOCK_PREMIUM', true);\n    \n    await loadCurrentState();\n    alert('Premium features enabled (dev mode)!');\n    \n    console.log('✅ Premium features enabled (dev)');\n  } catch (error) {\n    console.error('❌ Failed to enable premium features:', error);\n    alert('Failed to enable premium features');\n  }\n}\n\nasync function handleDisablePremiumDev(): Promise<void> {\n  try {\n    console.log('🔒 Disabling premium features (dev)...');\n    \n    await stateManager.updateUser({ isPremium: false });\n    await storageUtils.remove('DEV_MODE_PREMIUM');\n    await storageUtils.remove('MOCK_PREMIUM');\n    \n    await loadCurrentState();\n    alert('Premium features disabled (dev mode)!');\n    \n    console.log('✅ Premium features disabled (dev)');\n  } catch (error) {\n    console.error('❌ Failed to disable premium features:', error);\n    alert('Failed to disable premium features');\n  }\n}\n\nasync function handleExportSettings(): Promise<void> {\n  try {\n    console.log('📤 Exporting settings...');\n    \n    const state = stateManager.getState();\n    const dataStr = JSON.stringify(state, null, 2);\n    const dataBlob = new Blob([dataStr], { type: 'application/json' });\n    \n    const url = URL.createObjectURL(dataBlob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'ishka-settings.json';\n    link.click();\n    \n    URL.revokeObjectURL(url);\n    \n    console.log('✅ Settings exported');\n  } catch (error) {\n    console.error('❌ Failed to export settings:', error);\n    alert('Failed to export settings');\n  }\n}\n\nfunction handleImportSettings(): void {\n  console.log('📥 Importing settings...');\n  \n  const input = document.createElement('input');\n  input.type = 'file';\n  input.accept = '.json';\n  input.onchange = async (event) => {\n    try {\n      const file = (event.target as HTMLInputElement).files?.[0];\n      if (file) {\n        const text = await file.text();\n        const settings = JSON.parse(text);\n        \n        await stateManager.setState(settings);\n        await loadCurrentState();\n        \n        alert('Settings imported successfully!');\n        console.log('✅ Settings imported');\n      }\n    } catch (error) {\n      console.error('❌ Failed to import settings:', error);\n      alert('Failed to import settings');\n    }\n  };\n  input.click();\n}\n\nasync function handleResetAll(): Promise<void> {\n  try {\n    console.log('🔄 Resetting all settings...');\n    \n    if (confirm('Are you sure you want to reset ALL settings? This cannot be undone.')) {\n      await stateManager.resetState();\n      await loadCurrentState();\n      alert('All settings reset to defaults!');\n    }\n    \n    console.log('✅ All settings reset');\n  } catch (error) {\n    console.error('❌ Failed to reset all settings:', error);\n    alert('Failed to reset settings');\n  }\n}\n\nfunction handleCheckUpdates(): void {\n  console.log('🔄 Checking for updates...');\n  alert('You are using the latest version (3.9.7)');\n}\n\nconsole.log('🎯 Manage page script loaded and ready');","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t690: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkishka_extension\"] = self[\"webpackChunkishka_extension\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [804], () => (__webpack_require__(450)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","showSection","sectionName","forEach","name","section","document","getElementById","style","display","targetSection","querySelectorAll","btn","classList","remove","background","color","activeButton","add","async","loadCurrentState","console","log","response","chrome","runtime","sendMessage","type","state","premiumStatus","user","isPremium","textContent","themeSelect","value","preferences","theme","languageSelect","language","notificationsToggle","checked","enableNotifications","autoSaveToggle","autoSave","autoSaveInterval","settings","general","toString","maxConversations","rtlToggle","enableRTL","voiceDownloadToggle","enableVoiceDownload","debugModeToggle","advanced","debugMode","loggingToggle","enableLogging","customApiEndpoint","versionInfo","innerHTML","navigator","userAgent","match","Date","toLocaleDateString","error","updateUIWithState","handleSaveGeneral","parseInt","setState","alert","handleResetGeneral","confirm","updateUser","updateSettings","handleUpgradePremium","tabs","create","url","handleEnablePremiumDev","set","handleDisablePremiumDev","handleExportSettings","getState","dataStr","JSON","stringify","dataBlob","Blob","URL","createObjectURL","link","createElement","href","download","click","revokeObjectURL","handleImportSettings","input","accept","onchange","event","file","target","files","text","parse","handleResetAll","resetState","handleCheckUpdates","addEventListener","container","id","className","cssText","header","createManageHeader","appendChild","navigation","createNavigation","content","generalSection","createGeneralSection","premiumSection","createPremiumSection","advancedSection","createAdvancedSection","aboutSection","createAboutSection","createManageContent","body","initializeManagePageUI","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","Object","keys","every","key","splice","r","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}