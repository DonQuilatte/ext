!function(){"use strict";console.log("[DEBUG] Debug console script loaded"),window.debugExtension=function(){console.log("=== EXTENSION DEBUG INFO ==="),console.log("DEV_MODE_CONFIG:",void 0!==window.DEV_MODE_CONFIG?window.DEV_MODE_CONFIG:"NOT FOUND"),console.log("MOCK_BACKEND:",void 0!==window.MOCK_BACKEND?window.MOCK_BACKEND:"NOT FOUND"),console.log("mockBackend:",void 0!==window.mockBackend?window.mockBackend:"NOT FOUND"),console.log("verifyOfflineMode:",void 0!==window.verifyOfflineMode?"AVAILABLE":"NOT FOUND"),console.log("mockPremiumFeatures:",void 0!==window.mockPremiumFeatures?"AVAILABLE":"NOT FOUND");const e=document.querySelectorAll("script"),o=Array.from(e).filter(e=>e.src&&(e.src.includes("dev-mode.js")||e.src.includes("mock-backend.js")||e.src.includes("dev-init.js")||e.src.includes("verify-offline.js")));return console.log("Extension scripts found:",o.length),o.forEach(e=>console.log("- Script:",e.src)),{devModeConfig:void 0!==window.DEV_MODE_CONFIG,mockBackend:void 0!==window.MOCK_BACKEND||void 0!==window.mockBackend,verifyFunction:void 0!==window.verifyOfflineMode,scriptsLoaded:o.length}},window.manualVerify=function(){if(console.log("[MANUAL VERIFY] Starting manual verification..."),"function"==typeof window.mockPremiumFeatures){const e=window.mockPremiumFeatures();console.log("[MANUAL VERIFY] ‚úì Premium features mocked:",e)}else console.log("[MANUAL VERIFY] ‚ùå Premium features not mocked");return window.fetch&&window.fetch.toString().includes("DEV_MODE")?console.log("[MANUAL VERIFY] ‚úì Fetch is overridden for development mode"):console.log("[MANUAL VERIFY] ‚ùå Fetch may not be properly overridden"),console.log("[MANUAL VERIFY] Testing external API call..."),fetch("https://api.infi-dev.com/example-removed/auth/generate-jwt").then(e=>e.text()).then(e=>{e.includes("mock")||e.includes("jwt")?console.log("[MANUAL VERIFY] ‚úì External API call mocked successfully"):console.log("[MANUAL VERIFY] ‚ùå External API call may not be mocked")}).catch(e=>{e.message.includes("blocked")?console.log("[MANUAL VERIFY] ‚úì External API call properly blocked"):console.log("[MANUAL VERIFY] ‚ùå Unexpected error:",e)}),"Manual verification started - check console for results"},window.testOfflineMode=function(){console.log("üß™ TESTING OFFLINE MODE"),console.log("========================");const e={configLoaded:void 0!==window.DEV_MODE_CONFIG,mockBackendLoaded:void 0!==window.mockBackend,premiumMocked:"function"==typeof window.mockPremiumFeatures||!0===window.DEV_MODE_PREMIUM,fetchOverridden:window.fetch&&window.fetch.toString().includes("originalFetch")};for(const[o,n]of Object.entries(e))console.log(`${n?"‚úÖ":"‚ùå"} ${o}: ${n?"PASS":"FAIL"}`);const o=Object.values(e).filter(Boolean).length;return console.log(`\nResult: ${o}/${Object.keys(e).length} tests passed`),o===Object.keys(e).length?console.log("üéâ Offline mode is working correctly!"):console.log("‚ö†Ô∏è Some issues detected with offline mode setup"),e},console.log("[DEBUG] Available functions: debugExtension(), manualVerify(), testOfflineMode()")}();