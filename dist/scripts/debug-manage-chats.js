!function(){"use strict";function e(){console.log("=== TEST 1: Premium Functions Availability ==="),["getConversations","getUserFolders","getPrompts","getAllUserFolders"].forEach(e=>{const o=void 0!==window[e];console.log(`${e}: ${o?"✅ EXISTS":"❌ MISSING"}`),o||(console.log(`Creating mock ${e}...`),"getConversations"===e?window[e]=async function(){return console.log(`[MOCK] ${e} called`),[{id:"debug-chat-1",title:"Debug Chat 1",create_time:Date.now()/1e3,update_time:Date.now()/1e3,mapping:{},current_node:null},{id:"debug-chat-2",title:"Debug Chat 2",create_time:Date.now()/1e3,update_time:Date.now()/1e3,mapping:{},current_node:null}]}:"getUserFolders"===e||"getAllUserFolders"===e?window[e]=async function(){return console.log(`[MOCK] ${e} called`),[{_id:"debug-folder-1",name:"Debug Folder",parentFolder:null,chatIds:["debug-chat-1"],createdAt:(new Date).toISOString(),updatedAt:(new Date).toISOString()}]}:"getPrompts"===e&&(window[e]=async function(){return console.log(`[MOCK] ${e} called`),[{_id:"debug-prompt-1",name:"Debug Prompt",content:"This is a debug prompt",category:"debug",createdAt:(new Date).toISOString()}]}))})}async function o(){console.log("=== TEST 2: Premium Status Check ===");try{const e=chrome?.storage?.local;return e?new Promise(o=>{e.get(["DEV_MODE_PREMIUM","MOCK_PREMIUM","isPremiumUser","store"],t=>{console.log("Storage contents:",t);const n=t.DEV_MODE_PREMIUM||t.MOCK_PREMIUM||t.isPremiumUser||t.store&&t.store["-r.6es£Jr1U0"];console.log("Premium Status: "+(n?"✅ ACTIVE":"❌ INACTIVE")),n||(console.log("Activating premium status..."),e.set({DEV_MODE_PREMIUM:!0,MOCK_PREMIUM:!0,isPremiumUser:!0},()=>{console.log("✅ Premium status activated")})),o(n)})}):(console.log("❌ Chrome storage not available"),!1)}catch(e){return console.log("❌ Premium status check error:",e),!1}}async function t(){console.log("=== TEST 3: Manage Chats Click Simulation ===");try{const e=Array.from(document.querySelectorAll("*")).filter(e=>(e.textContent||"").includes("Manage Chats"));if(console.log(`Found ${e.length} "Manage Chats" elements`),e.length>0){const o=e[0];console.log("Manage Chats element:",o);try{console.log("Testing getConversations function...");const e=await window.getConversations();console.log("✅ getConversations returned:",e)}catch(e){throw console.log("❌ getConversations error:",e),e}}else console.log("❌ No Manage Chats elements found")}catch(e){console.log("❌ Manage Chats test error:",e)}}async function n(){console.log("🚀 Starting comprehensive Manage Chats debugging..."),function(){console.log("=== TEST 4: Console Error Monitoring ===");const o=console.error;let t=0;console.error=function(...n){const s=n.join(" ");s.includes("undefined")&&(t++,console.log(`🚨 CAUGHT UNDEFINED ERROR #${t}:`,s),e()),o.apply(console,n)},console.log("✅ Console error monitoring active")}(),function(){console.log("=== TEST 5: Network Request Monitoring ===");const e=window.fetch;window.fetch=function(...o){const t=o[0];return console.log("🌐 FETCH REQUEST:",t),"string"==typeof t&&(t.includes("example-removed")||t.includes("api.infi-dev.com"))&&console.log("🎯 AI-Toolbox request detected - should be mocked"),e.apply(this,o)},console.log("✅ Network request monitoring active")}(),e(),await o(),await t(),console.log("✅ All debugging tests completed"),setInterval(()=>{e()},3e3),console.log("🔄 Continuous monitoring started (every 3 seconds)")}console.log("🔍 DEBUG: Starting Manage Chats debugging..."),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",n):n(),window.debugManageChats={testPremiumFunctions:e,testPremiumStatus:o,testManageChatsClick:t,runAllTests:n}}();