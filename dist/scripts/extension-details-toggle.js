function createExtensionDetailsToggle(){if(!window.location.href.includes("chrome://extensions/")&&!window.location.href.includes("brave://extensions/"))return;const e=document.querySelector("extensions-detail-view");if(!e)return console.log("Extension details view not found, retrying..."),void setTimeout(createExtensionDetailsToggle,1e3);if(document.querySelector("#premium-dev-toggle-section"))return;const t=document.createElement("div");t.id="premium-dev-toggle-section",t.style.cssText="\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    color: white;\n    padding: 20px;\n    margin: 15px 0;\n    border-radius: 12px;\n    box-shadow: 0 4px 15px rgba(0,0,0,0.2);\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n  ",t.innerHTML='\n    <div style="display: flex; align-items: center; justify-content: space-between; margin-bottom: 15px;">\n      <h3 style="margin: 0; font-size: 18px; font-weight: 600;">\n        ðŸ§ª Development Mode - Premium Features\n      </h3>\n      <div style="display: flex; align-items: center; gap: 10px;">\n        <span id="premium-status-text" style="font-size: 14px; font-weight: 500;">Checking...</span>\n        <label style="position: relative; display: inline-block; width: 60px; height: 34px;">\n          <input type="checkbox" id="premium-toggle" style="opacity: 0; width: 0; height: 0;">\n          <span style="\n            position: absolute;\n            cursor: pointer;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background-color: #ccc;\n            transition: .4s;\n            border-radius: 34px;\n          ">\n            <span style="\n              position: absolute;\n              content: \'\';\n              height: 26px;\n              width: 26px;\n              left: 4px;\n              bottom: 4px;\n              background-color: white;\n              transition: .4s;\n              border-radius: 50%;\n              transform: translateX(0px);\n            "></span>\n          </span>\n        </label>\n      </div>\n    </div>\n    \n    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px; margin-bottom: 15px;">\n      <div style="background: rgba(255,255,255,0.1); padding: 12px; border-radius: 8px;">\n        <div style="font-size: 12px; opacity: 0.8; margin-bottom: 4px;">Chrome Storage</div>\n        <div id="storage-status" style="font-size: 14px; font-weight: 500;">Checking...</div>\n      </div>\n      <div style="background: rgba(255,255,255,0.1); padding: 12px; border-radius: 8px;">\n        <div style="font-size: 12px; opacity: 0.8; margin-bottom: 4px;">Extension Status</div>\n        <div id="extension-status" style="font-size: 14px; font-weight: 500;">Checking...</div>\n      </div>\n    </div>\n    \n    <div style="display: flex; gap: 10px; flex-wrap: wrap;">\n      <button id="refresh-status-btn" style="\n        background: rgba(255,255,255,0.2);\n        border: 1px solid rgba(255,255,255,0.3);\n        color: white;\n        padding: 8px 16px;\n        border-radius: 6px;\n        cursor: pointer;\n        font-size: 13px;\n        transition: all 0.2s;\n      ">ðŸ”„ Refresh Status</button>\n      \n      <button id="force-enable-btn" style="\n        background: #4CAF50;\n        border: none;\n        color: white;\n        padding: 8px 16px;\n        border-radius: 6px;\n        cursor: pointer;\n        font-size: 13px;\n        transition: all 0.2s;\n      ">ðŸš€ Force Enable</button>\n      \n      <button id="open-console-btn" style="\n        background: #FF9800;\n        border: none;\n        color: white;\n        padding: 8px 16px;\n        border-radius: 6px;\n        cursor: pointer;\n        font-size: 13px;\n        transition: all 0.2s;\n      ">ðŸ”§ Open Console</button>\n    </div>\n    \n    <div style="margin-top: 15px; font-size: 12px; opacity: 0.8; line-height: 1.4;">\n      <strong>Instructions:</strong> Toggle premium features on/off. After enabling, refresh ChatGPT page to see changes.\n      Use "Force Enable" if toggle doesn\'t work. Check console for detailed debugging information.\n    </div>\n  ';const n=e.querySelector("#permissions")||e.querySelector("#site-access")||e.querySelector('div[slot="content"]')||e;n?n.parentNode.insertBefore(t,n):e.appendChild(t),initializeToggleFunctionality()}async function initializeToggleFunctionality(){const e=document.getElementById("premium-toggle"),t=document.getElementById("premium-status-text"),n=document.getElementById("storage-status"),o=document.getElementById("extension-status"),i=document.getElementById("refresh-status-btn"),r=document.getElementById("force-enable-btn"),s=document.getElementById("open-console-btn");async function a(){try{await chrome.storage.local.set({DEV_MODE_PREMIUM:!0});const i=await chrome.storage.local.get(["DEV_MODE_PREMIUM","store"]);i.store||(i.store={},i.store["-r.6esÂ£Jr1U0"]=!0,i.store.isPremiumUser=!0,i.store.subscriptionStatus="active",await chrome.storage.local.set({store:i.store})),e.checked=!0,t.textContent="âœ… ENABLED (Local-only)",t.style.color="#4CAF50",n.innerHTML="\n        DEV_MODE_PREMIUM: âœ… (Local-only)<br>\n        Premium Key: âœ… (Local-only)\n      ",o.textContent="Local-only mode active";const r=e.nextElementSibling,s=r.querySelector("span");r.style.backgroundColor="#4CAF50",s.style.transform="translateX(26px)"}catch(i){console.error("Error updating status:",i),t.textContent="âœ… ENABLED (Local-only)",t.style.color="#4CAF50",n.textContent="Local-only mode active",o.textContent="Local-only mode active",e.checked=!0}}e&&(e.addEventListener("change",async()=>{try{e.checked=!0,await chrome.storage.local.set({DEV_MODE_PREMIUM:!0});const t=await chrome.storage.local.get("store");t.store||(t.store={}),t.store["-r.6esÂ£Jr1U0"]=!0,t.store.isPremiumUser=!0,t.store.subscriptionStatus="active",await chrome.storage.local.set({store:t.store}),showNotification("Premium features are permanently enabled in local-only mode!","success"),setTimeout(a,100)}catch(t){console.error("Error maintaining premium status:",t),showNotification("Error maintaining premium features","error"),e.checked=!0}}),i.addEventListener("click",a),r.addEventListener("click",async()=>{try{await chrome.storage.local.set({DEV_MODE_PREMIUM:!0});const e=await chrome.storage.local.get("store");e.store||(e.store={}),e.store["-r.6esÂ£Jr1U0"]=!0,e.store.isPremiumUser=!0,e.store.subscriptionStatus="active",await chrome.storage.local.set({store:e.store}),chrome.tabs.query({active:!0,currentWindow:!0},e=>{e[0]&&e[0].url.includes("chatgpt.com")&&chrome.tabs.executeScript(e[0].id,{code:"\n              window.DEV_MODE_PREMIUM = true;\n              window.isPremiumUser = true;\n              window.hasPremiumAccess = true;\n              console.log('ðŸš€ Premium features force-enabled from extension details page');\n            "})}),showNotification("Premium features force-enabled! Refresh ChatGPT page.","success"),a()}catch(e){console.error("Error force enabling:",e),showNotification("Error force enabling premium","error")}}),s.addEventListener("click",()=>{showNotification("Open Developer Tools (F12) and check console for debug info","info")}),a())}function showNotification(e,t="info"){const n=document.createElement("div"),o={success:"#4CAF50",error:"#f44336",info:"#2196F3"};if(n.style.cssText=`\n    position: fixed;\n    top: 20px;\n    right: 20px;\n    padding: 15px 20px;\n    background: ${o[t]||o.info};\n    color: white;\n    border-radius: 8px;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    font-size: 14px;\n    font-weight: 500;\n    z-index: 10000;\n    box-shadow: 0 4px 12px rgba(0,0,0,0.3);\n    max-width: 350px;\n    word-wrap: break-word;\n    animation: slideIn 0.3s ease-out;\n  `,!document.querySelector("#notification-styles")){const e=document.createElement("style");e.id="notification-styles",e.textContent="\n      @keyframes slideIn {\n        from { transform: translateX(100%); opacity: 0; }\n        to { transform: translateX(0); opacity: 1; }\n      }\n    ",document.head.appendChild(e)}n.textContent=`ðŸ§ª ${e}`,document.body.appendChild(n),setTimeout(()=>{n.style.opacity="0",n.style.transform="translateX(100%)",n.style.transition="all 0.3s ease-out",setTimeout(()=>{n.parentNode&&n.parentNode.removeChild(n)},300)},4e3)}console.log("ðŸ§ª Extension Details Premium Toggle Loaded"),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",createExtensionDetailsToggle):createExtensionDetailsToggle();let lastUrl=location.href;new MutationObserver(()=>{const e=location.href;e!==lastUrl&&(lastUrl=e,setTimeout(createExtensionDetailsToggle,500))}).observe(document,{subtree:!0,childList:!0}),console.log("ðŸ§ª Extension Details Premium Toggle Ready");