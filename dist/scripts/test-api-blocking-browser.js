!function(){"use strict";console.log("üîç [API-BLOCKING-TEST] Starting browser-based API blocking diagnosis...");let e={passed:0,failed:0,blocked:0,details:[]};function o(o,s,t,n=!1){const l=s?"‚úÖ":n?"üö´":"‚ùå",i=s?"PASS":n?"BLOCKED":"FAIL";console.log(`üîç [API-BLOCKING-TEST] ${l} ${o}: ${i} - ${t}`),e.details.push({test:o,status:i,message:t}),s?e.passed++:n?e.blocked++:e.failed++}async function s(){return console.log("üîç [API-BLOCKING-TEST] =========================================="),console.log("üîç [API-BLOCKING-TEST] STARTING API BLOCKING DIAGNOSTIC TESTS"),console.log("üîç [API-BLOCKING-TEST] =========================================="),o("Unified Context Fix Active",!0===window.unifiedContextFixActive,`unifiedContextFixActive = ${window.unifiedContextFixActive}`),await async function(){console.log("üîç [API-BLOCKING-TEST] Testing essential API endpoints...");const e=["https://api.infi-dev.com/example-removed/folder/get","https://api.infi-dev.com/example-removed/conversation/get","https://api.infi-dev.com/example-removed/auth/generate-jwt"];for(const s of e)try{await fetch(s,{method:"GET",headers:{"Content-Type":"application/json"}}),o(`Essential API ${s}`,!1,"Request went through - should be blocked for diagnosis",!1)}catch(e){e.message.includes("UNIFIED BLOCK")||e.message.includes("BLOCKED_BY_UNIFIED_FIX")||e.message.includes("blocked")?o(`Essential API ${s}`,!1,`BLOCKED: ${e.message}`,!0):o(`Essential API ${s}`,!1,`Network error: ${e.message}`,!1)}}(),await async function(){console.log("üîç [API-BLOCKING-TEST] Testing problematic API endpoints...");const e=["https://api.infi-dev.com/example-removed/auth/jwks","https://auth.openai.com/jwks","https://api.infi-dev.com/example-removed/subscription/check"];for(const s of e)try{await fetch(s),o(`Problematic API ${s}`,!1,"Request went through - should be blocked",!1)}catch(e){e.message.includes("UNIFIED BLOCK")||e.message.includes("BLOCKED_BY_UNIFIED_FIX")||e.message.includes("blocked")?o(`Problematic API ${s}`,!0,`Correctly blocked: ${e.message}`,!0):o(`Problematic API ${s}`,!1,`Network error: ${e.message}`,!1)}}(),await async function(){console.log("üîç [API-BLOCKING-TEST] Testing allowed endpoints...");const e=["https://httpbin.org/get","https://jsonplaceholder.typicode.com/posts/1"];for(const s of e)try{const e=await fetch(s);e.ok||e.status<500?o(`Allowed API ${s}`,!0,`Request successful: ${e.status}`):o(`Allowed API ${s}`,!1,`Server error: ${e.status}`,!1)}catch(e){e.message.includes("UNIFIED BLOCK")||e.message.includes("BLOCKED_BY_UNIFIED_FIX")?o(`Allowed API ${s}`,!1,`Incorrectly blocked: ${e.message}`,!0):o(`Allowed API ${s}`,!1,`Network error: ${e.message}`,!1)}}(),await async function(){if(console.log("üîç [API-BLOCKING-TEST] Testing folder retrieval..."),"function"==typeof window.getUserFolders)try{const e=await window.getUserFolders();e&&e.length>0?o("Folder Retrieval",!0,`Retrieved ${e.length} folders`):o("Folder Retrieval",!1,"No folders retrieved - API may be blocked",!1)}catch(e){o("Folder Retrieval",!1,`Error: ${e.message}`,!1)}else o("Folder Retrieval",!1,"getUserFolders function not available",!1)}(),await async function(){if(console.log("üîç [API-BLOCKING-TEST] Testing conversation retrieval..."),"function"==typeof window.getConversations)try{const e=await window.getConversations();e&&e.length>0?o("Conversation Retrieval",!0,`Retrieved ${e.length} conversations`):o("Conversation Retrieval",!1,"No conversations retrieved - API may be blocked",!1)}catch(e){o("Conversation Retrieval",!1,`Error: ${e.message}`,!1)}else o("Conversation Retrieval",!1,"getConversations function not available",!1)}(),console.log("üîç [API-BLOCKING-TEST] =========================================="),console.log("üîç [API-BLOCKING-TEST] DIAGNOSTIC TEST RESULTS"),console.log("üîç [API-BLOCKING-TEST] =========================================="),console.log(`üîç [API-BLOCKING-TEST] ‚úÖ PASSED: ${e.passed}`),console.log(`üîç [API-BLOCKING-TEST] ‚ùå FAILED: ${e.failed}`),console.log(`üîç [API-BLOCKING-TEST] üö´ BLOCKED: ${e.blocked}`),console.log(`üîç [API-BLOCKING-TEST] üìä TOTAL: ${e.passed+e.failed+e.blocked}`),e.blocked>0&&0===e.passed?(console.log("üîç [API-BLOCKING-TEST] =========================================="),console.log("üîç [API-BLOCKING-TEST] üö® DIAGNOSIS: API BLOCKING CONFIRMED"),console.log("üîç [API-BLOCKING-TEST] The unified context fix is blocking essential API calls"),console.log("üîç [API-BLOCKING-TEST] Core functionality (folders/chats) will not work"),console.log("üîç [API-BLOCKING-TEST] SOLUTION: Modify blocking logic to allow essential endpoints"),console.log("üîç [API-BLOCKING-TEST] ==========================================")):e.passed>0&&0===e.blocked?(console.log("üîç [API-BLOCKING-TEST] =========================================="),console.log("üîç [API-BLOCKING-TEST] ‚úÖ DIAGNOSIS: API BLOCKING NOT ACTIVE"),console.log("üîç [API-BLOCKING-TEST] Essential API calls are working"),console.log("üîç [API-BLOCKING-TEST] Issue may be elsewhere in the system"),console.log("üîç [API-BLOCKING-TEST] ==========================================")):(console.log("üîç [API-BLOCKING-TEST] =========================================="),console.log("üîç [API-BLOCKING-TEST] ‚ö†Ô∏è DIAGNOSIS: MIXED RESULTS"),console.log("üîç [API-BLOCKING-TEST] Some APIs blocked, some working - check individual results"),console.log("üîç [API-BLOCKING-TEST] ==========================================")),window.apiBlockingTestResults=e,e}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",s):s(),window.runAPIBlockingDiagnostic=s}();