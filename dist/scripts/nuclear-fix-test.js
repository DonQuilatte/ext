!function(){"use strict";console.log("🧪 NUCLEAR FIX TEST STARTING..."),setTimeout(()=>{console.log("🧪 Testing nuclear fix effectiveness..."),window.nuclearFixActive&&window.ISHKA_ULTRA_FIX_LOADED?console.log("✅ Nuclear fix is loaded and active"):console.log("❌ Nuclear fix is NOT loaded"),console.log("🧪 Testing fetch blocking..."),fetch("https://api.infi-dev.com/example-removed/auth/jwks?test=nuclear").then(e=>{console.log("❌ CRITICAL: Fetch request succeeded (should be blocked):",e)}).catch(e=>{console.log("✅ Fetch request blocked as expected:",e.message)}),console.log("🧪 Testing XMLHttpRequest blocking...");try{const e=new XMLHttpRequest;e.open("GET","https://api.infi-dev.com/example-removed/auth/jwks?test=nuclear-xhr"),e.onreadystatechange=function(){4===e.readyState&&(0===e.status?console.log("✅ XHR request blocked as expected"):console.log("❌ CRITICAL: XHR request succeeded (should be blocked)"))},e.onerror=function(){console.log("✅ XHR request blocked with error as expected")},e.send()}catch(e){console.log("✅ XHR request blocked with exception:",e.message)}console.log("🧪 Testing Request constructor blocking...");try{new Request("https://api.infi-dev.com/example-removed/auth/jwks?test=nuclear-request"),console.log("❌ CRITICAL: Request constructor succeeded (should be blocked)")}catch(e){console.log("✅ Request constructor blocked as expected:",e.message)}console.log("🧪 Testing various URL patterns..."),["https://api.infi-dev.com/example-removed/auth/jwks","https://auth.openai.com/jwks","https://api.infi-dev.com/test","https://example.com/jwks","https://test.com/example-removed","https://test.com/infi-dev","https://test.com/cacheBuster=123"].forEach((e,o)=>{setTimeout(()=>{fetch(e+"?test=pattern-"+o).then(o=>{console.log("❌ CRITICAL: Pattern test succeeded for:",e)}).catch(o=>{console.log("✅ Pattern test blocked for:",e,o.message)})},100*o)}),console.log("🧪 Testing stack overflow protection...");let e=0;!function o(){e++,e>10?console.log("✅ Stack overflow protection working - stopped at",e,"calls"):fetch("https://api.infi-dev.com/recursive-test-"+e).then(()=>{console.log("❌ CRITICAL: Recursive fetch succeeded"),o()}).catch(()=>{console.log("✅ Recursive fetch blocked at call",e),o()})}(),console.log("🧪 Testing extension context stability...");try{chrome&&chrome.runtime&&chrome.runtime.id?console.log("✅ Chrome extension context is stable"):console.log("⚠️ Chrome extension context not available (may be expected)")}catch(e){console.log("⚠️ Chrome extension context error:",e.message)}setTimeout(()=>{console.log("🧪 NUCLEAR FIX TEST COMPLETED"),console.log("🧪 Check above results - all external API requests should be blocked"),console.log("🧪 If any CRITICAL errors appear, the nuclear fix needs adjustment")},2e3)},1e3)}();