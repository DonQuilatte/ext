!function(){"use strict";window.showTestMenuModal=function(){try{console.log("Opening Test Menu modal...");let e=document.getElementById("testMenuModal");if(e)return void(e.style.display="block");function t(){const e=[];try{const t=["[data-testid=\"conversation-item\"]",'[data-testid="conversation-turn"]',".chat-item",".conversation-item","nav li > a",'nav [role="button"]',"nav a[href*=\"/c/\"]"];let n=[];for(const o of t){const t=document.querySelectorAll(o);if(t.length>0){console.log(`Found ${t.length} elements with selector: ${o}`),t.forEach((e,t)=>{const i={id:t+1,element:e,title:"",href:"",textContent:"",selector:o},l=e.querySelector('[data-testid="conversation-title"]')||e.querySelector(".conversation-title")||e.querySelector("h3")||e.querySelector("h4")||e;i.title=l?.textContent?.trim()||"Untitled Chat",i.href=e.href||e.getAttribute("href")||"",i.textContent=e.textContent?.trim().substring(0,100)||"",n.push(i)});break}}return n}catch(t){return console.error("Error retrieving chats:",t),[]}}const n=t(),o=`\n        <div id="testMenuModal" class="modal-overlay" style="\n          position: fixed;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          background: rgba(0,0,0,0.5);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          z-index: 10000;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n        ">\n          <div class="modal-content" style="\n            background: white;\n            padding: 30px;\n            border-radius: 12px;\n            max-width: 800px;\n            width: 90%;\n            max-height: 80vh;\n            overflow-y: auto;\n            position: relative;\n            box-shadow: 0 20px 40px rgba(0,0,0,0.3);\n          ">\n            <button id="closeTestMenuModal" style="\n              position: absolute;\n              top: 15px;\n              right: 20px;\n              background: none;\n              border: none;\n              font-size: 24px;\n              cursor: pointer;\n              color: #666;\n              padding: 5px;\n              line-height: 1;\n            ">&times;</button>\n            \n            <h2 style="margin: 0 0 20px 0; color: #333; font-size: 24px;">üß™ Test Menu - Chat List</h2>\n            \n            <div style="color: #666; line-height: 1.6;">\n              <h3 style="color: #333; margin: 20px 0 10px 0;">Chat Retrieval Test</h3>\n              <p>This test menu demonstrates the ability to retrieve and display all chats from the ChatGPT page.</p>\n              \n              <div style="background: #f0f8ff; padding: 15px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #2196F3;">\n                <h4 style="color: #333; margin: 0 0 10px 0;">üìä Results Summary</h4>\n                <p style="margin: 5px 0;"><strong>Total Chats Found:</strong> ${n.length}</p>\n                <p style="margin: 5px 0;"><strong>Retrieval Method:</strong> DOM Query Selectors</p>\n                <p style="margin: 5px 0;"><strong>Status:</strong> ${n.length>0?"‚úÖ Success":"‚ö†Ô∏è No chats found"}</p>\n              </div>\n              \n              <h3 style="color: #333; margin: 20px 0 10px 0;">üìù Chat List</h3>\n              <div style="\n                max-height: 300px;\n                overflow-y: auto;\n                border: 1px solid #ddd;\n                border-radius: 8px;\n                padding: 10px;\n                background: #f9f9f9;\n              ">\n                ${n.length>0?n.map((e,t)=>`\n                  <div style="\n                    padding: 10px;\n                    margin: 5px 0;\n                    background: white;\n                    border-radius: 6px;\n                    border-left: 3px solid #2196F3;\n                    font-size: 14px;\n                  ">\n                    <div style="font-weight: bold; color: #333; margin-bottom: 5px;">\n                      ${t+1}. ${e.title}\n                    </div>\n                    <div style="color: #666; font-size: 12px; margin-bottom: 3px;">\n                      Selector: ${e.selector}\n                    </div>\n                    ${e.href?`<div style="color: #666; font-size: 12px; margin-bottom: 3px;">URL: ${e.href}</div>`:""}\n                    ${e.textContent?`<div style="color: #888; font-size: 12px; font-style: italic;">${e.textContent}</div>`:""}\n                  </div>\n                `).join(""):`\n                  <div style="text-align: center; color: #666; padding: 20px;">\n                    No chats were found on this page.<br>\n                    <small>This might be because the page hasn't loaded yet, or the chat elements use different selectors.</small>\n                  </div>\n                `}\n              </div>\n              \n              <h3 style="color: #333; margin: 20px 0 10px 0;">üîß Actions</h3>\n              <div style="display: flex; gap: 10px; margin: 20px 0;">\n                <button id="refreshChatsBtn" style="\n                  background: #4CAF50;\n                  color: white;\n                  border: none;\n                  padding: 8px 16px;\n                  border-radius: 4px;\n                  cursor: pointer;\n                  font-size: 14px;\n                ">üîÑ Refresh Chat List</button>\n                <button id="exportChatsBtn" style="\n                  background: #2196F3;\n                  color: white;\n                  border: none;\n                  padding: 8px 16px;\n                  border-radius: 4px;\n                  cursor: pointer;\n                  font-size: 14px;\n                ">üíæ Export to JSON</button>\n                <button id="logChatsBtn" style="\n                  background: #FF9800;\n                  color: white;\n                  border: none;\n                  padding: 8px 16px;\n                  border-radius: 4px;\n                  cursor: pointer;\n                  font-size: 14px;\n                ">üìã Log to Console</button>\n              </div>\n              \n              <p style="font-size: 14px; color: #888; margin-top: 20px;">\n                ‚ÑπÔ∏è This is a test menu to demonstrate chat retrieval functionality. The actual implementation would integrate with the ChatGPT API or storage system.\n              </p>\n            </div>\n            \n            <div style="margin-top: 30px; text-align: center;">\n              <button id="closeTestMenuModalBtn" style="\n                background: #4CAF50;\n                color: white;\n                border: none;\n                padding: 10px 20px;\n                border-radius: 6px;\n                cursor: pointer;\n                font-size: 16px;\n              ">Close</button>\n            </div>\n          </div>\n        </div>\n      `;document.body.insertAdjacentHTML("beforeend",o);const i=document.getElementById("testMenuModal"),l=document.getElementById("closeTestMenuModal"),r=document.getElementById("closeTestMenuModalBtn"),s=document.getElementById("refreshChatsBtn"),a=document.getElementById("exportChatsBtn"),c=document.getElementById("logChatsBtn"),d=()=>{i&&i.remove()};l.addEventListener("click",d),r.addEventListener("click",d),s.addEventListener("click",()=>{d(),setTimeout(()=>{window.showTestMenuModal()},100)}),a.addEventListener("click",()=>{const e=JSON.stringify(n,null,2),t="data:application/json;charset=utf-8,"+encodeURIComponent(e),o=document.createElement("a");o.setAttribute("href",t),o.setAttribute("download","chatgpt-chats-export.json"),o.click()}),c.addEventListener("click",()=>{console.log("=== CHAT LIST DATA ==="),console.log("Total chats:",n.length),console.log("Chat data:",n),alert(`Chat data logged to console. Found ${n.length} chats.`)}),i.addEventListener("click",e=>{e.target===i&&d()}),document.addEventListener("keydown",e=>{"Escape"===e.key&&i&&d()}),console.log("Test Menu modal opened successfully")}catch(e){console.error("Error opening Test Menu modal:",e),alert("Test Menu functionality encountered an error. Please check the console for details.")}};try{window.showTestMenuModal=window.showTestMenuModal,globalThis.showTestMenuModal=window.showTestMenuModal,"undefined"!=typeof unsafeWindow&&(unsafeWindow.showTestMenuModal=window.showTestMenuModal),console.log("showTestMenuModal function loaded successfully"),console.log("showTestMenuModal type:",typeof window.showTestMenuModal),console.log("showTestMenuModal available globally:","showTestMenuModal"in window)}catch(e){console.error("Error setting up showTestMenuModal:",e)}}();