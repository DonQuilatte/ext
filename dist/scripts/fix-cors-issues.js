!function(){"use strict";console.log("[Fix CORS Issues] Initializing CORS fixes...");const e=["api.infi-dev.com","infi-dev.com","external-api.com","remote-backend.com","auth.openai.com"],t=[/api\.infi-dev\.com/i,/infi-dev\.com/i,/auth\.openai\.com.*jwks/i,/external-api/i,/remote-backend/i];function s(){console.log("[Fix CORS Issues] Starting comprehensive CORS fixes..."),function(){const s=window.fetch;window.fetch=function(o,n={}){try{const n=o.toString();if(e.some(e=>n.includes(e))||t.some(e=>e.test(n))){console.log("[Fix CORS Issues] Blocking external request to:",n);const e={success:!0,message:"Request blocked to prevent CORS error",data:[],blocked_url:n};if("undefined"!=typeof Response)try{return Promise.resolve(new Response(JSON.stringify(e),{status:200,statusText:"OK",headers:new Headers({"Content-Type":"application/json"})}))}catch(e){console.log("[Fix CORS Issues] Response constructor failed, using fallback")}return Promise.resolve({ok:!0,status:200,statusText:"OK",headers:{get:e=>"content-type"===e?"application/json":null},json:()=>Promise.resolve(e),text:()=>Promise.resolve(JSON.stringify(e))})}return s.apply(window,arguments)}catch(e){return console.error("[Fix CORS Issues] Error in fetch override:",e),s.apply(window,arguments)}};try{s&&void 0!==Object.setPrototypeOf&&Object.setPrototypeOf(window.fetch,s),void 0!==Object.defineProperty&&Object.defineProperty(window.fetch,"name",{value:"fetch"})}catch(e){console.log("[Fix CORS Issues] Could not set fetch properties, but override is active")}console.log("[Fix CORS Issues] Fetch override installed")}(),function(){const s=window.XMLHttpRequest;window.XMLHttpRequest=function(){const o=new s,n=o.open;return o.open=function(s,i,r,c,l){try{const a=i.toString();return e.some(e=>a.includes(e))||t.some(e=>e.test(a))?(console.log("[Fix CORS Issues] Blocking XHR request to:",a),void setTimeout(()=>{try{Object.defineProperty(o,"readyState",{value:4,writable:!1}),Object.defineProperty(o,"status",{value:200,writable:!1}),Object.defineProperty(o,"statusText",{value:"OK",writable:!1}),Object.defineProperty(o,"responseText",{value:JSON.stringify({success:!0,message:"XHR request blocked to prevent CORS error",data:[],blocked_url:a}),writable:!1}),o.onreadystatechange&&o.onreadystatechange(),o.onload&&o.onload()}catch(e){console.log("[Fix CORS Issues] Error setting XHR properties:",e.message)}},10)):n.call(this,s,i,r,c,l)}catch(e){return console.error("[Fix CORS Issues] Error in XHR override:",e),n.call(this,s,i,r,c,l)}},o},window.XMLHttpRequest.prototype=s.prototype,console.log("[Fix CORS Issues] XMLHttpRequest override installed")}(),function(){const t=document.createElement;document.createElement=function(s){const o=t.call(this,s);if("script"===s.toLowerCase()){const t=o.setAttribute;o.setAttribute=function(s,o){if("src"!==s||"string"!=typeof o||!e.some(e=>o.includes(e)))return t.call(this,s,o);console.log("[Fix CORS Issues] Blocking external script:",o)}}return o},console.log("[Fix CORS Issues] External script blocking installed")}(),function(){const e=window.onerror;window.onerror=function(t,s,o,n,i){return t&&(t.includes("CORS")||t.includes("Cross-Origin")||t.includes("blocked by CORS policy"))?(console.warn("[Fix CORS Issues] Caught CORS error:",t),console.log("[Fix CORS Issues] CORS error prevented from propagating"),!0):e?e.call(this,t,s,o,n,i):void 0},window.addEventListener("unhandledrejection",function(e){e.reason&&e.reason.message&&(e.reason.message.includes("CORS")||e.reason.message.includes("Cross-Origin")||e.reason.message.includes("blocked by CORS policy"))&&(console.warn("[Fix CORS Issues] Caught CORS promise rejection:",e.reason.message),e.preventDefault())}),console.log("[Fix CORS Issues] CORS error monitoring installed")}(),console.log("[Fix CORS Issues] All CORS fixes initialized successfully"),window.corsIssuesFixed=!0;try{window.dispatchEvent(new CustomEvent("corsIssuesFixed",{detail:{timestamp:Date.now()}}))}catch(e){console.log("[Fix CORS Issues] Could not dispatch event, but fixes are active")}}s(),"loading"===document.readyState&&document.addEventListener("DOMContentLoaded",s)}();