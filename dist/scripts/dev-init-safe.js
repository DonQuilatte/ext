!function(){"use strict";function e(){try{return!!(chrome&&chrome.runtime&&chrome.runtime.id)}catch(e){return!1}}function t(){console.log("[SAFE DEV MODE] Setting up premium status..."),window.DEV_MODE_PREMIUM=!0,window.MOCK_PREMIUM=!0,window.isPremiumUser=!0;try{localStorage.setItem("DEV_MODE_PREMIUM","true"),localStorage.setItem("MOCK_PREMIUM","true"),localStorage.setItem("isPremiumUser","true"),localStorage.setItem("userPlan","premium"),localStorage.setItem("subscriptionStatus","active")}catch(e){console.warn("[SAFE DEV MODE] localStorage not available:",e)}if(e())try{chrome.storage.local.get,chrome.storage.local.get=function(e,t){const o={DEV_MODE_PREMIUM:!0,MOCK_PREMIUM:!0,isPremiumUser:!0,userPlan:"premium",subscriptionStatus:"active",store:{"-r.6es£Jr1U0":!0,isPremiumUser:!0,subscriptionStatus:"active"}};return console.log("[SAFE DEV MODE] Providing premium storage data:",o),t&&t(o),Promise.resolve(o)}}catch(e){console.warn("[SAFE DEV MODE] Could not override chrome.storage:",e)}}function o(){console.log("[SAFE DEV MODE] Setting up safe API functions...");const e={getConversations:async function(){return console.log("[SAFE DEV MODE] Safe getConversations called"),[{id:"safe_1",title:"Safe Mode - Extension Working",create_time:Date.now()/1e3,update_time:Date.now()/1e3,mapping:{},current_node:null}]},getUserFolders:async function(){return console.log("[SAFE DEV MODE] Safe getUserFolders called"),[{id:"safe_folder",name:"Safe Mode Folder",color:"green",created_at:Date.now()/1e3,updated_at:Date.now()/1e3}]},getPrompts:async function(){return console.log("[SAFE DEV MODE] Safe getPrompts called"),[{id:"safe_prompt",title:"Safe Mode Prompt",content:"Extension is running in safe mode.",created_at:Date.now()/1e3,category:"Safe"}]}};Object.assign(window,e),window.getAllUserFolders=e.getUserFolders,window.getAllConversations=e.getConversations,window.getAllPrompts=e.getPrompts,window.local_folders=window.local_folders||[],window.isResetChatHistory=window.isResetChatHistory||!1}function n(){console.log("[SAFE DEV MODE] Initializing safe development mode..."),t(),function(){if(console.log("[SAFE DEV MODE] Setting up request blocking..."),"undefined"!=typeof fetch){const e=fetch;window.fetch=function(t,o={}){const n="string"==typeof t?t:t.toString();return n.includes("api.infi-dev.com")||n.includes("auth.openai.com")||n.startsWith("https://")&&!n.includes("chatgpt.com")?(console.log("[SAFE DEV MODE] Blocking external request:",n),Promise.resolve(new Response(JSON.stringify({success:!0,message:"Blocked by safe dev mode",data:{}}),{status:200,headers:{"Content-Type":"application/json"}}))):e.call(this,t,o)}}}(),o(),setInterval(()=>{t(),o()},2e3),console.log("[SAFE DEV MODE] ✅ Safe development mode initialized")}console.log("[SAFE DEV MODE] Safe development mode initialization started"),n(),"loading"===document.readyState&&document.addEventListener("DOMContentLoaded",n),window.safeDevMode={init:n,setupPremiumStatus:t,setupSafeAPIFunctions:o,isChromeAPIAvailable:e}}();