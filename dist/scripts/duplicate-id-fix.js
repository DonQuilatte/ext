console.log("🔧 DUPLICATE ID FIX: Starting duplicate ID resolution"),console.log("🔍 DEBUG: document.readyState =",document.readyState),console.log("🔍 DEBUG: document.body exists =",!!document.body),console.log("🔍 DEBUG: document.documentElement exists =",!!document.documentElement),function(){"use strict";function e(t,o=1){const n=`${t}-${o}`;return document.getElementById(n)?e(t,o+1):n}function t(){const t=document.querySelectorAll("[id]"),o={},n=[];t.forEach(e=>{const t=e.id;o[t]?(o[t]++,n.push(e)):o[t]=1});let i=0;return Object.keys(o).forEach(t=>{o[t]>1&&(console.warn(`🚨 DUPLICATE ID FIX: Found ${o[t]} elements with ID "${t}"`),document.querySelectorAll(`[id="${t}"]`).forEach((o,n)=>{if(n>0){const c=e(t,n+1),r=o.id;o.id=c,document.querySelectorAll(`label[for="${r}"]`).forEach(e=>{e.offsetParent===o.offsetParent&&(e.setAttribute("for",c),console.log(`✅ DUPLICATE ID FIX: Updated label for "${r}" to "${c}"`))}),document.querySelectorAll(`[aria-labelledby="${r}"], [aria-describedby="${r}"]`).forEach(e=>{e.getAttribute("aria-labelledby")===r&&e.setAttribute("aria-labelledby",c),e.getAttribute("aria-describedby")===r&&e.setAttribute("aria-describedby",c)}),console.log(`✅ DUPLICATE ID FIX: Renamed "${r}" to "${c}"`),i++}}))}),i}function o(){console.log("🔬 DUPLICATE ID FIX: Scanning for specific problematic IDs..."),["temporary-chat-checkbox","infi-chevron-icon","infi-info-icon","infi-search-icon","infi-folders-icon","infi-prompt-icon","infi-gallery-icon","infi-ltr-icon"].forEach(e=>{const t=document.querySelectorAll(`[id="${e}"]`);t.length>1&&(console.warn(`🔬 FOUND DUPLICATE IDS: ${e}`),console.warn(`🚨 DUPLICATE ID FIX: Found ${t.length} elements with ID "${e}"`),t.forEach((e,t)=>{console.log(`  ${t+1}. Element: ${e.tagName}, Parent: ${e.parentElement?.tagName||"none"}, Classes: ${e.className||"none"}`)}))})}function n(){console.log("🔍 DUPLICATE ID FIX: Scanning for duplicate IDs..."),o();const n=t()+function(){let t=0;return["temporary-chat-checkbox","infi-chevron-icon","infi-info-icon","infi-search-icon","infi-folders-icon","infi-prompt-icon","infi-gallery-icon","infi-ltr-icon","premium-toggle","settings-checkbox","folder-checkbox","chat-checkbox"].forEach(o=>{const n=document.querySelectorAll(`[id="${o}"]`);n.length>1&&(console.warn(`🚨 DUPLICATE ID FIX: Found ${n.length} elements with known problematic ID "${o}"`),n.forEach((n,i)=>{if(i>0){const c=e(o,i+1);n.id=c,document.querySelectorAll(`label[for="${o}"]`).forEach(e=>{e.offsetParent===n.offsetParent&&e.setAttribute("for",c)}),console.log(`✅ DUPLICATE ID FIX: Fixed known duplicate "${o}" to "${c}"`),t++}}))}),t}();return n>0?console.log(`✅ DUPLICATE ID FIX: Fixed ${n} duplicate IDs`):console.log("✅ DUPLICATE ID FIX: No duplicate IDs found"),function(){const t=Element.prototype.setAttribute;Element.prototype.setAttribute=function(o,n){if("id"===o.toLowerCase()&&n){const i=document.getElementById(n);if(i&&i!==this){const i=e(n);return console.warn(`🚨 DUPLICATE ID FIX: Prevented duplicate ID "${n}", using "${i}" instead`),t.call(this,o,i)}}return t.call(this,o,n)};const o=Object.getOwnPropertyDescriptor(Element.prototype,"id")?.set;o&&Object.defineProperty(Element.prototype,"id",{get:function(){return this.getAttribute("id")||""},set:function(t){if(t){const n=document.getElementById(t);if(n&&n!==this){const n=e(t);return console.warn(`🚨 DUPLICATE ID FIX: Prevented duplicate ID "${t}", using "${n}" instead`),o.call(this,n)}}return o.call(this,t)},configurable:!0,enumerable:!0})}(),console.log("✅ DUPLICATE ID FIX: Duplicate ID prevention installed"),n}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",n):n(),setInterval(()=>{o();const e=t();e>0&&console.log(`🔄 DUPLICATE ID FIX: Fixed ${e} dynamically created duplicate IDs`)},5e3);const i=new MutationObserver(e=>{let o=!1;e.forEach(e=>{"childList"===e.type&&e.addedNodes.forEach(e=>{e.nodeType===Node.ELEMENT_NODE&&(e.id||e.querySelector("[id]"))&&(o=!0)}),"attributes"===e.type&&"id"===e.attributeName&&(o=!0)}),o&&setTimeout(()=>{const e=t();e>0&&console.log(`🔄 DUPLICATE ID FIX: Fixed ${e} duplicate IDs from DOM mutations`)},100)});function c(){try{return window.domUtils&&window.domUtils.isBodyReady()?(i.observe(document.body,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["id"]}),console.log("✅ DUPLICATE ID FIX: MutationObserver monitoring for new duplicate IDs"),!0):(console.warn("⚠️ DUPLICATE ID FIX: document.body not ready for observer"),!1)}catch(e){return console.error("❌ DUPLICATE ID FIX: Observer setup error:",e),!1}}if(window.domUtils)console.log("🔧 DUPLICATE ID FIX: Using robust DOM utilities for observer setup"),window.domUtils.whenBodyReady(()=>{c()});else if(console.log("🔧 DUPLICATE ID FIX: Robust DOM utilities not available, using fallback"),document.body&&document.body.nodeType===Node.ELEMENT_NODE)c();else{const e=(t=1,o=10)=>{t>o?console.error("❌ DUPLICATE ID FIX: Max retry attempts reached"):setTimeout(()=>{c()?console.log(`✅ DUPLICATE ID FIX: Observer setup successful on attempt ${t}`):(console.log(`🔄 DUPLICATE ID FIX: Retry attempt ${t}/${o}`),e(t+1,o))},100*t)};e(),"loading"===document.readyState&&document.addEventListener("DOMContentLoaded",()=>{c()||e()})}}(),console.log("🎯 DUPLICATE ID FIX: Duplicate ID resolution system initialized");