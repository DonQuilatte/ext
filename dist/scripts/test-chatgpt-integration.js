!function(){"use strict";console.log("🧪 [CHATGPT-TEST] Starting ChatGPT Integration Tests...");let e={passed:0,failed:0,warnings:0,details:[]};function o(o,n,t,s=!1){const i=n?"✅":s?"⚠️":"❌",r=n?"PASS":s?"WARN":"FAIL";console.log(`🧪 [CHATGPT-TEST] ${i} ${o}: ${r} - ${t}`),e.details.push({test:o,status:r,message:t}),n?e.passed++:s?e.warnings++:e.failed++}function n(){console.log("🧪 [CHATGPT-TEST] =========================================="),console.log("🧪 [CHATGPT-TEST] STARTING CHATGPT INTEGRATION TESTS"),console.log("🧪 [CHATGPT-TEST] =========================================="),function(){console.log("🧪 [CHATGPT-TEST] Testing ChatGPT Detection...");window.location.hostname.includes("chatgpt.com")||window.location.hostname.includes("chat.openai.com")?o("ChatGPT Detection",!0,`Detected ChatGPT site: ${window.location.hostname}`):o("ChatGPT Detection",!1,`Not on ChatGPT site: ${window.location.hostname}`,!0)}(),function(){console.log("🧪 [CHATGPT-TEST] Testing CORS Blocking...");let e=!1;try{fetch("https://api.infi-dev.com/example-removed/auth/jwks?test=1").then(()=>{o("CORS Blocking",!1,"CORS request went through - blocking failed")}).catch(n=>{n.message.includes("blocked")||n.message.includes("Request blocked")?(o("CORS Blocking",!0,"CORS request properly blocked"),e=!0):o("CORS Blocking",!1,`CORS request failed but not blocked: ${n.message}`,!0)})}catch(n){n.message.includes("blocked")?(o("CORS Blocking",!0,"CORS request blocked immediately"),e=!0):o("CORS Blocking",!1,`Unexpected error: ${n.message}`)}}();const n=function(){console.log("🧪 [CHATGPT-TEST] Testing Extension Context...");try{if("undefined"!=typeof chrome&&chrome.runtime&&chrome.runtime.id){chrome.storage.local.get(["test"],function(e){chrome.runtime.lastError?o("Extension Context",!1,`Chrome storage error: ${chrome.runtime.lastError.message}`,!0):o("Extension Context",!0,"Chrome extension context is stable")});try{const e=chrome.runtime.getManifest();e&&"Ishka"===e.name?o("Extension Manifest",!0,"Extension manifest accessible and correct"):o("Extension Manifest",!1,"Extension manifest incorrect or inaccessible",!0)}catch(e){o("Extension Manifest",!1,`Manifest access error: ${e.message}`,!0)}return!0}return o("Extension Context",!1,"Chrome extension context not available"),!1}catch(e){return o("Extension Context",!1,`Extension context error: ${e.message}`),!1}}(),t=function(){console.log("🧪 [CHATGPT-TEST] Testing Real API Bridge...");const e=["realGetConversations","realGetUserFolders","realGetPrompts"];let n=0;return e.forEach(e=>{"function"==typeof window[e]?(o(`Real API ${e}`,!0,`${e} function is available`),n++):o(`Real API ${e}`,!1,`${e} function not found`)}),"function"==typeof window.realGetConversations&&setTimeout(async()=>{try{console.log("🧪 [CHATGPT-TEST] Testing conversation extraction...");const e=await window.realGetConversations();if(e&&e.length>0){o("Conversation Extraction",!0,`Successfully extracted ${e.length} conversations`);const n=e[0];n.id&&n.title?o("Conversation Structure",!0,`Conversation has proper structure: ${n.title}`):o("Conversation Structure",!1,"Conversation missing required fields",!0)}else o("Conversation Extraction",!1,"No conversations extracted - may need to be on ChatGPT with conversations",!0)}catch(e){o("Conversation Extraction",!1,`Error extracting conversations: ${e.message}`)}},2e3),n===e.length}(),s=(function(){console.log("🧪 [CHATGPT-TEST] Testing DOM Integration...");["nav","aside",'[role="navigation"]','[data-testid*="conversation"]',"main",'[role="main"]'].forEach(e=>{const n=document.querySelectorAll(e);n.length>0?o(`DOM Element ${e}`,!0,`Found ${n.length} elements`):o(`DOM Element ${e}`,!1,`No elements found for ${e}`,!0)});const e=document.querySelectorAll('a[href*="/c/"]');e.length>0?o("Conversation Links",!0,`Found ${e.length} conversation links in DOM`):o("Conversation Links",!1,"No conversation links found in DOM - user may need conversations",!0)}(),function(){console.log("🧪 [CHATGPT-TEST] Testing Premium Feature Integration...");let e=!0;return[{key:"DEV_MODE_PREMIUM",expected:!0},{key:"isPremiumUser",expected:!0},{key:"userPlan",expected:"premium"},{key:"subscriptionStatus",expected:"active"}].forEach(n=>{const t=window[n.key];t===n.expected?o(`Premium ${n.key}`,!0,`${n.key} is correctly set to ${t}`):(o(`Premium ${n.key}`,!1,`${n.key} is ${t}, expected ${n.expected}`),e=!1)}),["getConversations","getUserFolders","getPrompts"].forEach(e=>{"function"==typeof window[e]?o(`Premium Function ${e}`,!0,`${e} is available`):o(`Premium Function ${e}`,!1,`${e} not available`,!0)}),e}()),i=function(){console.log("🧪 [CHATGPT-TEST] Testing Error Suppression...");const e="function"==typeof window.onerror,n=null!==window.onunhandledrejection;o("Global Error Handler",e,e?"Global error handler installed":"No global error handler"),o("Promise Rejection Handler",n,n?"Promise rejection handler installed":"No promise rejection handler");const t=!console.error.toString().includes("[native code]");return o("Console Error Override",t,t?"Console.error is overridden for filtering":"Console.error not overridden"),e&&n&&t}();setTimeout(()=>{console.log("🧪 [CHATGPT-TEST] =========================================="),console.log("🧪 [CHATGPT-TEST] CHATGPT INTEGRATION TEST RESULTS"),console.log("🧪 [CHATGPT-TEST] =========================================="),console.log(`🧪 [CHATGPT-TEST] ✅ PASSED: ${e.passed}`),console.log(`🧪 [CHATGPT-TEST] ❌ FAILED: ${e.failed}`),console.log(`🧪 [CHATGPT-TEST] ⚠️  WARNINGS: ${e.warnings}`),console.log(`🧪 [CHATGPT-TEST] 📊 TOTAL TESTS: ${e.passed+e.failed+e.warnings}`);const o=[t,s];[n,i].every(e=>e)?(console.log("🧪 [CHATGPT-TEST] =========================================="),console.log("🧪 [CHATGPT-TEST] 🎉 CRITICAL SYSTEMS WORKING!"),console.log("🧪 [CHATGPT-TEST] Extension core functionality is operational"),o.every(e=>e)?(console.log("🧪 [CHATGPT-TEST] 🚀 ALL SYSTEMS FULLY OPERATIONAL!"),console.log("🧪 [CHATGPT-TEST] ChatGPT integration is working perfectly")):console.log("🧪 [CHATGPT-TEST] ⚠️  Some functional features need attention"),console.log("🧪 [CHATGPT-TEST] ==========================================")):(console.log("🧪 [CHATGPT-TEST] =========================================="),console.log("🧪 [CHATGPT-TEST] ❌ CRITICAL ISSUES DETECTED"),console.log("🧪 [CHATGPT-TEST] Extension needs fixes before use"),console.log("🧪 [CHATGPT-TEST] ==========================================")),window.chatGPTTestResults=e},5e3)}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",n):n();let t=location.href;new MutationObserver(()=>{const e=location.href;e!==t&&(t=e,setTimeout(n,2e3))}).observe(document,{subtree:!0,childList:!0})}();