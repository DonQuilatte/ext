/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/content/index.ts":
/*!******************************!*\
  !*** ./src/content/index.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _shared_state__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @shared/state */ \"./src/shared/state/index.ts\");\n/* harmony import */ var _shared_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @shared/utils */ \"./src/shared/utils/index.ts\");\n\n\nconsole.log('üéØ Ishka Extension Content Script Initialized');\nasync function initializeContentScript() {\n    try {\n        console.log('üöÄ Starting content script initialization...');\n        if (document.readyState === 'loading') {\n            await new Promise(resolve => {\n                document.addEventListener('DOMContentLoaded', resolve);\n            });\n        }\n        await initializeCoreFeatures();\n        await loadPremiumFeatures();\n        setupEventListeners();\n        await initializeUIComponents();\n        console.log('‚úÖ Content script initialization complete');\n    }\n    catch (error) {\n        console.error('‚ùå Content script initialization failed:', error);\n    }\n}\nasync function initializeCoreFeatures() {\n    console.log('üîß Initializing core features...');\n    if (!window.location.hostname.includes('chatgpt.com')) {\n        console.log('‚ö†Ô∏è Not on ChatGPT page, skipping initialization');\n        return;\n    }\n    await _shared_state__WEBPACK_IMPORTED_MODULE_0__.stateManager.updateUser({\n        isLoggedIn: await checkUserLoginStatus(),\n    });\n    await loadConversations();\n    console.log('‚úÖ Core features initialized');\n}\nasync function checkUserLoginStatus() {\n    try {\n        const loginIndicators = [\n            '[data-testid=\"user-menu\"]',\n            '.user-menu',\n            '[data-testid=\"user-avatar\"]',\n            '.avatar',\n        ];\n        for (const selector of loginIndicators) {\n            if (document.querySelector(selector)) {\n                return true;\n            }\n        }\n        const logoutButton = document.querySelector('[data-testid=\"logout-button\"]');\n        if (logoutButton) {\n            return true;\n        }\n        return false;\n    }\n    catch (error) {\n        console.error('Error checking login status:', error);\n        return false;\n    }\n}\nasync function loadConversations() {\n    try {\n        console.log('üìö Loading conversations...');\n        const conversationList = await _shared_utils__WEBPACK_IMPORTED_MODULE_1__.domUtils.waitForElement('[data-testid=\"conversation-list\"]', 10000);\n        if (conversationList) {\n            const conversationElements = conversationList.querySelectorAll('[data-testid=\"conversation-item\"]');\n            const conversations = Array.from(conversationElements).map((element) => {\n                const titleElement = element.querySelector('[data-testid=\"conversation-title\"]');\n                const id = element.getAttribute('data-conversation-id') || '';\n                const title = titleElement?.textContent || 'Untitled';\n                return {\n                    id,\n                    title,\n                    messages: [],\n                    createdAt: new Date(),\n                    updatedAt: new Date(),\n                    isPinned: false,\n                    tags: [],\n                };\n            });\n            await _shared_state__WEBPACK_IMPORTED_MODULE_0__.stateManager.updateConversations({ conversations });\n            console.log(`‚úÖ Loaded ${conversations.length} conversations`);\n        }\n    }\n    catch (error) {\n        console.error('‚ùå Failed to load conversations:', error);\n    }\n}\nasync function loadPremiumFeatures() {\n    try {\n        const state = _shared_state__WEBPACK_IMPORTED_MODULE_0__.stateManager.getState();\n        if (state.user.isPremium) {\n            console.log('üíé Loading premium features...');\n            await loadModule('./features/premium');\n            console.log('‚úÖ Premium features loaded');\n        }\n        else {\n            console.log('‚ÑπÔ∏è Premium features not enabled');\n        }\n    }\n    catch (error) {\n        console.error('‚ùå Failed to load premium features:', error);\n    }\n}\nasync function loadModule(modulePath) {\n    try {\n        console.log(`üì¶ Loading module: ${modulePath}`);\n    }\n    catch (error) {\n        console.error(`‚ùå Failed to load module ${modulePath}:`, error);\n    }\n}\nfunction setupEventListeners() {\n    console.log('üéß Setting up event listeners...');\n    const observer = new MutationObserver((mutations) => {\n        mutations.forEach((mutation) => {\n            if (mutation.type === 'childList') {\n                handleDOMChanges(mutation);\n            }\n        });\n    });\n    observer.observe(document.body, {\n        childList: true,\n        subtree: true,\n    });\n    chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n        handleMessage(message, sender)\n            .then(sendResponse)\n            .catch((error) => {\n            console.error('‚ùå Error handling message:', error);\n            sendResponse({ error: error.message });\n        });\n        return true;\n    });\n    console.log('‚úÖ Event listeners set up');\n}\nfunction handleDOMChanges(mutation) {\n    if (mutation.addedNodes.length > 0) {\n        mutation.addedNodes.forEach((node) => {\n            if (node.nodeType === Node.ELEMENT_NODE) {\n                const element = node;\n                if (element.getAttribute('data-testid') === 'conversation-item') {\n                    console.log('üÜï New conversation detected');\n                    loadConversations();\n                }\n                if (element.textContent?.includes('Toolbox Plan - Free')) {\n                    console.log('üîÑ Plan text detected, updating...');\n                    updatePlanText();\n                }\n            }\n        });\n    }\n}\nfunction updatePlanText() {\n    try {\n        const planElements = document.querySelectorAll('[data-testid=\"plan-text\"]');\n        planElements.forEach((element) => {\n            if (element.textContent?.includes('Toolbox Plan - Free')) {\n                element.textContent = element.textContent.replace('Free', 'Premium');\n                element.classList.add('toolbox-plan-premium');\n                console.log('‚úÖ Plan text updated to Premium');\n            }\n        });\n    }\n    catch (error) {\n        console.error('‚ùå Failed to update plan text:', error);\n    }\n}\nasync function handleMessage(message, sender) {\n    const { type, payload } = message;\n    switch (type) {\n        case 'GET_STATE':\n            return { state: _shared_state__WEBPACK_IMPORTED_MODULE_0__.stateManager.getState() };\n        case 'UPDATE_PLAN_TEXT':\n            updatePlanText();\n            return { success: true };\n        case 'ENABLE_PREMIUM':\n            await enablePremiumFeatures();\n            return { success: true };\n        case 'DISABLE_PREMIUM':\n            await disablePremiumFeatures();\n            return { success: true };\n        default:\n            throw new Error(`Unknown message type: ${type}`);\n    }\n}\nasync function enablePremiumFeatures() {\n    try {\n        console.log('üíé Enabling premium features...');\n        await _shared_state__WEBPACK_IMPORTED_MODULE_0__.stateManager.updateUser({ isPremium: true });\n        await _shared_utils__WEBPACK_IMPORTED_MODULE_1__.storageUtils.set('DEV_MODE_PREMIUM', true);\n        await _shared_utils__WEBPACK_IMPORTED_MODULE_1__.storageUtils.set('MOCK_PREMIUM', true);\n        updatePlanText();\n        await loadPremiumFeatures();\n        console.log('‚úÖ Premium features enabled');\n    }\n    catch (error) {\n        console.error('‚ùå Failed to enable premium features:', error);\n    }\n}\nasync function disablePremiumFeatures() {\n    try {\n        console.log('üîí Disabling premium features...');\n        await _shared_state__WEBPACK_IMPORTED_MODULE_0__.stateManager.updateUser({ isPremium: false });\n        await _shared_utils__WEBPACK_IMPORTED_MODULE_1__.storageUtils.remove('DEV_MODE_PREMIUM');\n        await _shared_utils__WEBPACK_IMPORTED_MODULE_1__.storageUtils.remove('MOCK_PREMIUM');\n        console.log('‚úÖ Premium features disabled');\n    }\n    catch (error) {\n        console.error('‚ùå Failed to disable premium features:', error);\n    }\n}\nasync function initializeUIComponents() {\n    try {\n        console.log('üé® Initializing UI components...');\n        injectExtensionStyles();\n        await createExtensionUI();\n        console.log('‚úÖ UI components initialized');\n    }\n    catch (error) {\n        console.error('‚ùå Failed to initialize UI components:', error);\n    }\n}\nfunction injectExtensionStyles() {\n    const styles = `\n    .ishka-extension {\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n    \n    .ishka-extension .toolbox-plan-premium {\n      color: #10a37f;\n      font-weight: 600;\n    }\n    \n    .ishka-extension .premium-badge {\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      color: white;\n      padding: 2px 8px;\n      border-radius: 12px;\n      font-size: 12px;\n      font-weight: 500;\n    }\n  `;\n    _shared_utils__WEBPACK_IMPORTED_MODULE_1__.domUtils.injectStyle(styles);\n}\nasync function createExtensionUI() {\n    try {\n        const container = document.createElement('div');\n        container.className = 'ishka-extension';\n        container.id = 'ishka-extension-container';\n        container.style.cssText = `\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      z-index: 10000;\n      background: white;\n      border: 1px solid #e5e5e5;\n      border-radius: 8px;\n      padding: 12px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n      font-size: 14px;\n    `;\n        container.innerHTML = `\n      <div style=\"display: flex; align-items: center; gap: 8px; margin-bottom: 8px;\">\n        <span style=\"font-weight: 600; color: #10a37f;\">Ishka</span>\n        <span class=\"premium-badge\">v3.9.7</span>\n      </div>\n      <div style=\"font-size: 12px; color: #666;\">\n        Enhanced ChatGPT Experience\n      </div>\n    `;\n        document.body.appendChild(container);\n        console.log('‚úÖ Extension UI created');\n    }\n    catch (error) {\n        console.error('‚ùå Failed to create extension UI:', error);\n    }\n}\ninitializeContentScript().catch((error) => {\n    console.error('‚ùå Content script initialization failed:', error);\n});\nwindow.ishkaExtension = {\n    enablePremium: enablePremiumFeatures,\n    disablePremium: disablePremiumFeatures,\n    updatePlanText,\n    getState: () => _shared_state__WEBPACK_IMPORTED_MODULE_0__.stateManager.getState(),\n    setState: (partial) => _shared_state__WEBPACK_IMPORTED_MODULE_0__.stateManager.setState(partial),\n};\nconsole.log('üéØ Content script loaded and ready');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/content/index.ts\n\n}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"content": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkishka_extension"] = self["webpackChunkishka_extension"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["shared"], () => (__webpack_require__("./src/content/index.ts")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;