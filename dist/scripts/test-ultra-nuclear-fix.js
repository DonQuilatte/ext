!function(){"use strict";console.log("🧪 TESTING ULTRA-NUCLEAR FIX - Starting comprehensive tests...");let e={passed:0,failed:0,tests:[]};function t(t,s,o){e.tests.push({name:t,passed:s,details:o}),s?(e.passed++,console.log(`✅ TEST PASSED: ${t} - ${o}`)):(e.failed++,console.log(`❌ TEST FAILED: ${t} - ${o}`))}t("Ultra-Nuclear Fix Loaded",!0===window.ULTRA_NUCLEAR_ACTIVE,`ULTRA_NUCLEAR_ACTIVE = ${window.ULTRA_NUCLEAR_ACTIVE}`);let s=!1;try{fetch("https://api.infi-dev.com/test").catch(e=>{s=e.message.includes("NUCLEAR BLOCK")||e.message.includes("ULTRA-NUCLEAR BLOCK")})}catch(e){s=e.message.includes("NUCLEAR BLOCK")||e.message.includes("ULTRA-NUCLEAR BLOCK")}t("Fetch Blocking",s,"api.infi-dev.com requests blocked");let o=!1;try{const e=new XMLHttpRequest;e.open("GET","https://api.infi-dev.com/test"),o=0===e.readyState}catch(e){o=!0}t("XHR Blocking",o,"XMLHttpRequest to api.infi-dev.com blocked");let c=!1;try{new URL("https://api.infi-dev.com/test")}catch(e){c=e.message.includes("ULTRA-NUCLEAR BLOCK")}if(t("URL Constructor Blocking",c,"URL constructor blocks api.infi-dev.com"),window.WebSocket){let e=!1;try{new WebSocket("wss://api.infi-dev.com/ws")}catch(t){e=t.message.includes("ULTRA-NUCLEAR BLOCK")}t("WebSocket Blocking",e,"WebSocket to api.infi-dev.com blocked")}if(window.EventSource){let e=!1;try{new EventSource("https://api.infi-dev.com/events")}catch(t){e=t.message.includes("ULTRA-NUCLEAR BLOCK")}t("EventSource Blocking",e,"EventSource to api.infi-dev.com blocked")}let i=!1;try{new Request("https://api.infi-dev.com/test")}catch(e){i=e.message.includes("NUCLEAR BLOCK")}t("Request Constructor Blocking",i,"Request constructor blocks api.infi-dev.com"),t("Premium Status Setup",!0===window.isPremiumUser&&"premium"===window.userPlan,`isPremiumUser=${window.isPremiumUser}, userPlan=${window.userPlan}`),t("Chrome Storage Override","function"==typeof window.chromeStorageGet,"Chrome storage functions available");let n=!1;const r=console.error;console.error=function(...e){return e.join(" ").includes("Extension context invalidated")&&(n=!0),r.apply(console,e)};try{console.error("Extension context invalidated test")}catch(e){}t("Error Suppression",n,"Extension context invalidated errors suppressed"),t("Service Worker Available","serviceWorker"in navigator,"Service worker API available for blocking");let a=!1;try{const e=document.createElement("script");e.src="https://api.infi-dev.com/script.js",a=!e.src||""===e.src}catch(e){a=!0}t("Script Src Blocking",a,"Script src to api.infi-dev.com blocked");let l=!1;try{fetch("https://premium.example.com/api/test").catch(e=>{l=e.message.includes("NUCLEAR BLOCK")||e.message.includes("ULTRA-NUCLEAR BLOCK")})}catch(e){l=e.message.includes("NUCLEAR BLOCK")||e.message.includes("ULTRA-NUCLEAR BLOCK")}t("Enhanced Pattern Blocking",l,"Premium/subscription patterns blocked"),console.log("\n🧪 ULTRA-NUCLEAR FIX TEST RESULTS:"),console.log(`✅ Tests Passed: ${e.passed}`),console.log(`❌ Tests Failed: ${e.failed}`),console.log(`📊 Success Rate: ${Math.round(e.passed/(e.passed+e.failed)*100)}%`),0===e.failed?console.log("🎉 ALL TESTS PASSED - ULTRA-NUCLEAR FIX IS FULLY OPERATIONAL!"):console.log("⚠️ Some tests failed - check individual test results above"),window.ultraNuclearTestResults=e}();